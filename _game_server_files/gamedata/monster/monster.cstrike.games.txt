"Games"
{
	"#default"
	{
		"Offsets"
		{
			/* Game Rules */
			"g_pGameRules" // done
			{
				"windows"	"5"
			}
			"GameRules_Damage_NoPhysicsForce" // done
			{
				"windows"	"20"
				"linux"	 "21"
			}
			"GameRules_GetNextBestWeapon" // done
			{
				"windows"	"28"
				"linux"	 "29"
			}
			"GameRules_ShouldCollide" // done
			{
				"windows"	"29"
				"linux"	 "30"
			}
			"GameRules_GetViewVectors" // done
			{
				"windows"	"31"
				"linux"	 "32"
			}
			"GameRules_IsSkillLevel" // done
			{
				"windows"	"50" // "49"
				"linux"	 "50"
			}
			"GameRules_IsTeamplay" // done
			{
				"windows"	"57" // "56"
				"linux"	 "57"
			}
			"GameRules_FlPlayerFallDamageHook" // done
			{
				"windows"	"63" // "62"
				"linux"	"63"
			}
			"GameRules_FPlayerCanTakeDamage" // done
			{
				"windows"	"64" // "63"
				"linux"	 "64"
			}
			"GameRules_RadiusDamage" // done
			{
				"windows"	"69" // "68"
				"linux"	 "69"
			}
			"GameRules_IsSpawnPointValid" // done
			{
				"windows"	"77" // "76"
				"linux"	 "77"
			}
			"GameRules_DeathNotice" // done
			{
				"windows"	"83" // "82"
				"linux"	 "83"
			}
			"GameRules_FAllowNPCs" // done
			{
				"windows"	"120" // "119"
				"linux"	 "120"
			}
			"GameRules_EndMultiplayerGame" // done
			{
				"windows"	"121" // "120"
				"linux"	 "121"
			}
			
			
			
			/* CGameMovement */
			"CGameMovement_OnLadder" // done
			{
				"windows"	"34"
				"linux"	 "35"
			}
			"CGameMovement_CheckFalling" // done
			{
				"windows"	"44"
				"linux"	 "45"
			}
			
			
			
			/* CSceneEntity */
			"StartPlayback" // done
			{
				"windows"	"202" // "196"
				"linux"	"207" // "201"
			}
			"CancelPlayback" // done
			{
				"windows"	"205" // "199"
				"linux"	"210" // "204"
			}
			"EstimateLength" // done
			{
				"windows"	"234" // "228"
				"linux"	"239" // "233"
			}
			"FindNamedActor_I" // done
			{
				"windows"	"238" // "231"
				"linux"	"241" // "235"
			}
			
			/* CBaseGrenade */
			"Explode" // done
			{
				"windows"	"231" // "224"
				"linux"	"232" // "225"
			}
			"Detonate" // done
			{
				"windows"	"232" // "225"
				"linux"	"233" // "226"
			}
			"GetBlastForce" // done
			{
				"windows" "233" // "226"
				"linux" "234" // "227"
			}
			"GetShakeAmplitude" // done
			{
				"windows"	"235" // "228"
				"linux"	"236" // "229"
			}
			"GetShakeRadius" // done
			{
				"windows"	"236" // "229"
				"linux"	"237" // "230"
			}			
			
			/* CBaseEntity */
			"GetServerClass" // done
			{
				"windows"	"9"
				"linux"	"10"
			}
			"GetDataDescMap_Real" // done
			{
				"windows"	"11"
				"linux"	"12"
			}
			"TestCollision" // done ? two functions offsets // same names but Collision and Hitboxes
			{
				"windows"	"14" // "13"
				"linux"	"15" // "14"
			}
			"TestHitboxes" // done
			{
				"windows"	"15" // "14"
				"linux"	"16" // "15"
			}
			"ComputeWorldSpaceSurroundingBox" // done
			{
				"windows"	"16" // "15"
				"linux"	"17" // "16"
			}
			"ShouldCollide" // done
			{
				"windows"	"17" // "16"
				"linux"	"18" // "17"
			}
			"SetOwnerEntity" // done
			{
				"windows"	"18" // "17"
				"linux"	"19" // "18"
			}
			"ShouldTransmit" // done
			{
				"windows"	"20" // "18"
				"linux"	"21" // "19"
			}
			"UpdateTransmitState" // done
			{
				"windows"	"21" // "19"
				"linux"	"22" // "20"
			}
			"SetTransmit" // done
			{
				"windows"	"22" // "20"
				"linux"	"23" // "21"
			}
			"GetTracerType" // done -> CBaseEntity::GetBeamTraceFilter()
			{
				"windows"	"23" // "21"
				"linux"	"24" // "22"
			}
			"Spawn" // done
			{
				"windows"	"24" // "22"
				"linux"	"25" // "23"
			}
			"Precache" // done
			{
				"windows"	"25" // "23"
				"linux"	"26" // "24"
			}
			"SetModel" // done
			{
				"windows"	"26" // "24"
				"linux"	"27" // "25"
			}
			"DispatchKeyValue" // done
			{
				"windows"	"33" // "31"
				"linux"	"32" // "30"
			}
			"DispatchKeyValueVector" // done
			{
				"windows"	"31" // "29"
				"linux"	"34" // "32"
			}
			"DispatchKeyValueFloat" // done
			{
				"windows"	"32" // "30"
				"linux"	"33"// "31"
			}
			"Activate" // done
			{
				"windows"	"35" // "33"
				"linux"	"36" // "34"
			}
			"SetParent" // done
			{
				"windows"	"35" // "34"
				"linux"	"36" // "35"
			}
			"ObjectCaps" // done
			{
				"windows"	"37" // "35"
				"linux"	"38" // "36"
			}
			"AcceptInput" // done
			{
				"windows"	"38" // "36"
				"linux"	"39" // "37"
			}
			"Save" // done
			{
				"windows"	"42" // "40"
				"linux"	"43" // "41"
			}
			"Restore" // done
			{
				"windows"	"43" // "41"
				"linux"	"44" // "42"
			}
			"ShouldSavePhysics" // done
			{
				"windows"	"44" // "42"
				"linux"	"45" // "43"
			}
			"OnSave" // done
			{
				"windows"	"45" // "43"
				"linux"	"46" // "44"
			}
			"OnRestore" // done
			{
				"windows"	"46" // "44"
				"linux"	"47" // "45"
			}
			"Think" // done
			{
				"windows"	"49" // "47"
				"linux"	"50" // "48"
			}
			"GetResponseSystem" // done
			{
				"windows"	"53" // "51"
				"linux"	"54" // "52"
			}
			"DispatchResponse" // done
			{
				"windows"	"54" // "52"
				"linux"	"55" // "53"
			}
			"Classify" // done
			{
				"windows"	"55" // "53"
				"linux"	"56" // "54"
			}
			"DeathNotice" // done
			{
				"windows"	"56" // "54"
				"linux"	"57" // "55"
			}
			"ShouldAttractAutoAim" // done
			{
				"windows"	"57" // "55"
				"linux"	"58"// "56"
			}
			"GetAutoAimRadius" // done
			{
				"windows"	"58" // "56"
				"linux"	"59" // "57"
			}
			"GetAutoAimCenter" // done
			{
				"windows"	"59" // "57"
				"linux"	"60" // "58"
			}
			"PassesDamageFilter" // done
			{
				"windows"	"61" // "59"
				"linux"	"62" // "60"
			}
			"TraceAttack" // done
			{
				"windows"	"62"// "60"
				"linux"	"63" // "61"
			}
			"OnTakeDamage" // done
			{
				"windows"	"64" // "62"
				"linux"		"65" // "63"
			}
			"TakeHealth" // done
			{
				"windows"	"66" // "64"
				"linux"	"67" // "65"
			}
			"IsAlive" // done
			{
				"windows"	"67" // "65"
				"linux"	"68" // "66"
			}
			"Event_Killed" // done
			{
				"windows"	"68" // "66"
				"linux"	"69" // "67"
			}
			"Event_KilledOther" // done
			{
				"windows"	"69" // "67"
				"linux"	"70" // "68"
			}
			"BloodColor" // done
			{
				"windows"	"70" // "68"
				"linux"	"71" // "69"
			}
			"IsTriggered" // done
			{
				"windows"	"71" // "69"
				"linux"	"72" // "70"
			}
			"IsNPC" // done
			{
				"windows"	"72" // "70"
				"linux"	"73" // "71"
			}
			"IsMoving" // done
			{
				"windows"	"76" // "74"
				"linux"	"77" // "75"
			}
			"DecalTrace" // done
			{
				"windows"	"78" // "76"
				"linux"	"79" // "77"
			}
			"ImpactTrace" // done
			{
				"windows"	"79" // "77"
				"linux"	"80" // "78"
			}
			"OnControls" // done
			{
				"windows"	"80" // "78"
				"linux"	"81"// "79"
			}
			"IsNetClient" // done
			{
				"windows"	"83" // "81"
				"linux"	"84" // "82"
			}
			"GetServerVehicle" // done
			{
				"windows"	"91" // "89"
				"linux"	"92" // "90"
			}
			"IsViewable" // done
			{
				"windows"	"92" // "90"
				"linux"	"93" // "91"
			}
			"OnEntityEvent" // donoe
			{
				"windows"	"94" // "92"
				"linux"	"95" // "93"
			}
			"CanStandOn" //CBaseEntity // done
			{
				"windows"	"96" // "94"
				"linux"	"96" // "94"
			}
			"CB_GetEnemy_const" // done
			{
				"windows"	"97" // "95"
				"linux"	"99" // "97"
			}
			"CB_GetEnemy" // done
			{
				"windows"	"98" // "96"
				"linux"	"98" // "96"
			}
			"Use" // done
			{
				"windows"	"99" // "97"
				"linux"	"100" // "98"
			}
			"StartTouch" // done
			{
				"windows"	"100" // "98"
				"linux"	"101" // "99"
			}
			"Touch" // done
			{
				"windows"	"101" // "99"
				"linux"	"102" // "100"
			}
			"EndTouch" // done
			{
				"windows"	"102" // "100"
				"linux"	"103" // "101"
			}
			"PhysicsSimulate" // done
			{
				"windows"	"106" // "104"
				"linux"	"107" // "105"
			}
			"UpdateOnRemove" // done
			{
				"windows"	"107" // "105"
				"linux"	"108" // "106"
			}
			"StopLoopingSounds" // done
			{
				"windows"	"108" // "106"
				"linux"	"109" // "107"
			}
			"SUB_AllowedToFade" // done
			{
				"windows"	"109" // "107"
				"linux"	"110" // "108"
			}
			"Teleport" // done
			{
				"windows"	"110" // "108"
				"linux"	"111" // "109"
			}
			"MakeTracer" // done
			{
				"windows"	"112" // "110"
				"linux"	"113" // "111"
			}
			"FireBullets" // done
			{
				"windows"	"114" // "112"
				"linux"	"115" // "113"
			}
			"DoImpactEffect" // done
			{
				"windows"	"115" // "113"
				"linux"	"116" // "114"
			}
			"ModifyOrAppendCriteria" // done
			{
				"windows"	"120" // "118"
				"linux"	"121" // "119"
			}
			"GetDamage" // done
			{
				"windows"	"131" // "128"
				"linux"	"132" // "129"
			}
			"SetDamage" // done
			{
				"windows"	"132" // "129"
				"linux"	"133" // "130"
			}
			"EyePosition" // done
			{
				"windows"	"133" // "130"
				"linux"	"134" // "131"
			}
			"EyeAngles" // done
			{
				"windows"	"134" // "131"
				"linux"	"135" // "132"
			}
			"EarPosition" // done
			{
				"windows"	"136" // "133"
				"linux"	"137" // "134"
			}
			"BodyTarget" // done
			{
				"windows"	"137" // "134"
				"linux"	"138" // "135"
			}
			"HeadTarget" // done
			{
				"windows"	"138" // "135"
				"linux"	"139" // "136"
			}
			"GetViewOffset" // done
			{
				"windows"	"140" // "137"
				"linux"	"141" // "138"
			}
			"GetSmoothedVelocity" // done
			{
				"windows"	"142" // "139"
				"linux"	"143" // "140"
			}
			"GetVelocity" // done
			{
				"windows"	"143" // "140"
				"linux"	"144" // "141"
			}
			"FVisible_Vector" // done
			{
				"windows"	"144" // "141"
				"linux"	"146" // "143"
			}
			"FVisible_Entity" // done
			{
				"windows"	"145" // "142"
				"linux"	"145" // "142"
			}
			"CanBeSeenBy" // done
			{
				"windows"	"146" // "143"
				"linux"	"147" // "144"
			}
			"GetAttackDamageScale" // done
			{
				"windows"	"147" // "144"
				"linux"	"148" // "145"
			}
			"Splash" // done
			{
				"windows"	"151" // "148"
				"linux"	"152" // "149"
			}
			"WorldSpaceCenter" // done
			{
				"windows"	"152" // "149"
				"linux"	"153" // "150"
			}
			"GetSoundEmissionOrigin" // done
			{
				"windows"	"153" // "150"
				"linux"	"154" // "151"
			}
			"CreateVPhysics" // done
			{
				"windows"	"157" // "154"
				"linux"	"158" // "155"
			}
			"VPhysicsDestroyObject" // done
			{
				"windows"	"159" // "156"
				"linux"	"160" // "157"
			}
			"VPhysicsUpdate" // done
			{
				"windows"	"160" // "157"
				"linux"	"161" // "158"
			}
			"VPhysicsTakeDamage" // done
			{
				"windows"	"161" // "158"
				"linux"	"162" // "159"
			}
			"VPhysicsShadowCollision" // done
			{
				"windows"	"162" // "159"
				"linux"	"163" // "160"
			}
			"VPhysicsShadowUpdate" // done
			{
				"windows"	"163" // "160"
				"linux"	"164" // "161"
			}
			"VPhysicsCollision" // done
			{
				"windows"	"164" // "161"
				"linux"	"165" // "162"
			}
			"UpdatePhysicsShadowToCurrentPosition" // done
			{
				"windows"	"166" // "163"
				"linux"	"167" // "164"
			}
			"VPhysicsGetObjectList" // done
			{
				"windows"	"167" // "164"
				"linux"	"168" // "165"
			}
			"VPhysicsIsFlesh" // done
			{
				"windows"	"168" // "165"
				"linux"	"169" // "166"
			}
			"HasPhysicsAttacker" // done
			{
				"windows"	"169" // "166"
				"linux"	"170" // "167"
			}
			"PhysicsSolidMaskForEntity" // done
			{
				"windows"	"170" // "167"
				"linux"	"171" // "168"
			}
			"ResolveFlyCollisionCustom" // done
			{
				"windows"	"171" // "168"
				"linux"	"172" // "169"
			}
			/* End CBaseEntity */ 
			
			
			/* CBaseTrigger */
			"PassesTriggerFilters" // done
			{
				"windows"	"203" // "197"
				"linux"	"204" // "198"
			}
			/* End CBaseTrigger */
			
			/* CBaseAnimating */
			"GetIdealSpeed" // done
			{
				"windows"	"194" // "188"
				"linux"	"195" // "189"
			}
			"GetIdealAccel" // done
			{
				"windows"	"195" // "189"
				"linux"	"196" // "190"
			}
			"StudioFrameAdvance" // done
			{
				"windows"	"196" // "190"
				"linux"	"197" // "191"
			}
			"IsActivityFinished" // done
			{
				"windows"	"198" // "192"
				"linux"	"199" // "193"
			}
			"GetSequenceGroundSpeed" // done
			{
				"windows"	"199" // "193"
				"linux"	"200" // "194"
			}
			"ClampRagdollForce" // done
			{
				"windows"	"200" // "194"
				"linux"	"201" // "195"
			}
			"BecomeRagdollOnClient" // done
			{
				"windows"	"201" // "195"
				"linux"	"202" // "196"
			}
			"CanBecomeRagdoll" // done
			{
				"windows"	"203" // "197"
				"linux"	"204" // "198"
			}
			"SetupBones" // done
			{
				"windows"	"206" // "200"
				"linux"	"207" // "201"
			}
			"CalculateIKLocks" // done
			{
				"windows"	"207" // "201"
				"linux"	"208" // "202"
			}
			"DispatchAnimEvents" // done
			{
				"windows"	"208" // "202"
				"linux"	"209" // "203"
			}
			"HandleAnimEvent" // done
			{
				"windows"	"209" // "203"
				"linux"	"210" // "204"
			}
			"PopulatePoseParameters" // done
			{
				"windows"	"210" // "204"
				"linux"	"211" // "205"
			}
			"GetAttachment" // done
			{
				"windows"	"211" // "205"
				"linux"	"212" // "206"
			}
			"InitBoneControllers" // done
			{
				"windows"	"212" // "206"
				"linux"	"213" // "207"
			}
			"GetGroundSpeedVelocity" // done
			{
				"windows"	"213" // "207"
				"linux"	"214" // "208"
			}
			"Ignite" //Ignite(float, bool, float, bool) // done
			{
				"windows"	"215" // "209"
				"linux"	"216" // "210"
			}
			"Extinguish" // done
			{
				"windows"	"219" // "213"
				"linux"	"220" // "214"
			}
			"m_nHitboxSet" // !!! done
			{
				// "windows"   "860"
				"linux" "940" // "880"
			}
			/* End CBaseAnimating */
			
			
			
			/* CBaseCombatCharacter */
			"GetPhysicsImpactDamageTable" // done
			{
				"windows"	"231" // "225"
				"linux"	"232" // "226"
			}
			"FInViewCone_Vector"
			{
				"windows"	"232" // "226"
				"linux"	"234" // "228"
			}
			"FInViewCone_Entity" // done
			{
				"windows"	"233" // "227"
				"linux"	"233" // "227"
			}
			"FInAimCone_Vector" // done
			{
				"windows"	"234" // "228"
				"linux"	"236" // "230"
			}
			"FInAimCone_Entity" // done
			{
				"windows"	"235" // "229"
				"linux"	"235" // "229"
			}
			"ShouldShootMissTarget" // done
			{
				"windows"	"236" // "230"
				"linux"	"237" // "231"
			}
			"FindMissTarget" // done
			{
				"windows"	"237" // "231"
				"linux"	"238" // "232"
			}
			"HandleInteraction" // done
			{
				"windows"	"238" // "232"
				"linux"	"239" // "233"
			}
			"BodyAngles" // done
			{
				"windows"	"239" // "233"
				"linux"	"240" // "234"
			}
			"BodyDirection2D" // done
			{
				"windows"	"240" // "234"
				"linux"	"241" // "235"
			}
			"BodyDirection3D" // done
			{
				"windows"	"241" // "235"
				"linux"	"242" // "236"
			}
			"HeadDirection2D" // done
			{
				"windows"	"242" // "236"
				"linux"	"243" // "237"
			}
			"HeadDirection3D" // done
			{
				"windows"	"243" // "237"
				"linux"	"244" // "238"
			}
			"EyeDirection2D" // done
			{
				"windows"	"244" // "238"
				"linux"	"245" // "239"
			}
			"EyeDirection3D" // done
			{
				"windows"	"245" // "239"
				"linux"	"246" // "240"
			}
			"GiveAmmo" // done
			{
				"windows"	"258" // "252"
				"linux"	"259" // "253"
			}
			"NPC_TranslateActivity" // done
			{
				"windows"	"262" // "256"
				"linux"	"263" // "257"
			}
			"RemoveAmmo" //int,char* // done
			{
				"windows"	"259" // "253"
				"linux"	"261" // "255"
			}
			"GetAmmoCount" // done
			{
				"windows"	"261" // "255"
				"linux"	"262" // "256"
			}
			"Weapon_TranslateActivity" // done
			{
				"windows"	"263" // "257"
				"linux"	"264" // "258"
			}
			"Weapon_CanUse" // done
			{
				"windows"	"266" // "260"
				"linux"	"267" // "261"
			}
			"Weapon_Equip" // done
			{
				"windows"	"267" // "261"
				"linux"	"268" // "262"
			}
			"Weapon_Drop" // done
			{
				"windows"	"269" // "263"
				"linux"	"270" // "264"
			}
			"Weapon_Switch" // done
			{
				"windows"	"270" // "264"
				"linux"	"271" // "265"
			}
			"Weapon_ShootPosition" // done
			{
				"windows"	"271" // "265"
				"linux"	"272" // "266"
			}
			"Weapon_CanSwitchTo" // done
			{
				"windows"	"272" // "266"
				"linux"	"273" // "267"
			}
			"Weapon_GetSlot" // done
			{
				"windows"	"274" // "268"
				"linux"	"275" // "269"
			}
			"CanBecomeServerRagdoll" // done
			{
				"windows"	"277" // "271"
				"linux"	"278" // "272"
			}
			"OnTakeDamage_Alive" // done
			{
				"windows"	"278" // "272"
				"linux"		"279" // "273"
			}
			"OnTakeDamage_Dying" // done
			{
				"windows"	"279" // "273"
				"linux"	"280" // "274"
			}
			"OnTakeDamage_Dead" // done
			{
				"windows"	"280" // "274"
				"linux"	"281" // "275"
			}
			"OnFriendDamaged" // done
			{
				"windows"	"282" // "276"
				"linux"	"283" // "277"
			}
			"NotifyFriendsOfDamage" // done
			{
				"windows"	"283" // "277"
				"linux"	"284" // "278"
			}
			"OnPlayerKilledOther" // done
			{
				"windows"	"286" // "280"
				"linux"	"287" // "281"
			}
			"CorpseGib" // done
			{
				"windows"	"288" // "282"
				"linux"	"289" // "283"
			}
			"ShouldGib" // done
			{
				"windows"	"292" // "286"
				"linux"	"293" // "287"
			}
			"OnKilledNPC" // done
			{
				"windows"	"293" // "287"
				"linux"	"294" // "288"
			}
			"Event_Gibbed" // done
			{
				"windows"	"294" // "288"
				"linux"	"295" // "289"
			}
			"Event_Dying"//void // done
			{
				"windows"	"295" // "289" // wrong - "290"
				"linux"	"297" // "291"
			}
			"BecomeRagdoll" // done
			{
				"windows"	"297" // "291"
				"linux"	"298" // "292"
			}
			"BecomeRagdollBoogie" // done
			{
				"windows"	"299" // "293"
				"linux"	"300" // "294"
			}
			"CheckTraceHullAttack_Vector" // done
			{
				"windows"	"300" // "294"
				"linux"	"302" // "296"
			}
			"CheckTraceHullAttack_Float" // done
			{
				"windows"	"301" // "295"
				"linux"	"301" // "295"
			}
			"IRelationType" // done
			{
				"windows"	"303" // "297"
				"linux"	"304" // "298"
			}
			"IRelationPriority" // done
			{
				"windows"	"304" // "298"
				"linux"	"305" // "299"
			}
			"IsInAVehicle" // done
			{
				"windows"	"305" // "299"
				"linux"	"306" // "300"
			}
			"GetVehicle" // done
			{
				"windows"	"306" // "300"
				"linux"	"307" // "301"
			}
			"GetVehicleEntity" // done
			{
				"windows"	"307" // "301"
				"linux"	"308" // "302"
			}
			"CalcWeaponProficiency" // done
			{
				"windows"	"310" // "304"
				"linux"	"311" // "305"
			}
			"GetAttackSpread" // done
			{
				"windows"	"311" // "305"
				"linux"	"312" // "306"
			}
			"GetSpreadBias" // done
			{
				"windows"	"312" // "306"
				"linux"	"313" // "307"
			}
			"DoMuzzleFlash" // done
			{
				"windows"	"313" // "307"
				"linux"	"314" // "308"
			}
			"AddEntityRelationship" // done
			{
				"windows"	"314" // "308"
				"linux"	"315" // "309"
			}
			"RemoveEntityRelationship" // done
			{
				"windows"	"315" // "309"
				"linux"	"316" // "310"
			}
			"AddClassRelationship" // done
			{
				"windows"	"316" // "310"
				"linux"	"317" // "311"
			}
			"OnChangeActiveWeapon" // done
			{
				"windows"	"317" // "311"
				"linux"	"318" // "312"
			}
			/* End CBaseCombatCharacter */
			
			
			
			/* CBasePlayer */
			"PreThink" // done
			{
				"windows"	"338" // "332"
				"linux"	"339" // "333"
			}
			"PostThink" // done
			{
				"windows"	"339" // "333"
				"linux"	"340" // "334"
			}
			"FlashlightIsOn" // done
			{
				"windows"	"360" // "354"
				"linux"	"361" // "355"
			}
			"IsIlluminatedByFlashlight" // done
			{
				"windows"	"363" // "357"
				"linux"	"364" // "358"
			}
			"SetAnimation" // done
			{
				"windows"	"372" // "366"
				"linux"	"373" // "367"
			}
			"EntSelectSpawnPoint" // done
			{
				"windows"	"399" // "392"
				"linux"	"400" // "393"
			}
			"GetInVehicle" // done
			{
				"windows"	"400" // "393"
				"linux"	"401" // "394"
			}
			"LeaveVehicle" // done
			{
				"windows"	"401" // "394"
				"linux"	"402" // "395"
			}
			"BumpWeapon" // done
			{
				"windows"	"404" // "397"
				"linux"	"405" // "398"
			}
			"GiveNamedItem" // done
			{
				"windows"	"408" // "401"
				"linux"	"409" // "402"
			}
			"FindUseEntity" // done
			{
				"windows"	"414" // "407"
				"linux"	"415" // "408"
			}
			"IsUseableEntity" // done
			{
				"windows"	"415" // "408"
				"linux"	"416" // "409"
			}
			"PickupObject" // done
			{
				"windows"	"416" // "409"
				"linux"	"417" // "410"
			}
			"ForceDropOfCarriedPhysObjects" // done
			{
				"windows"	"417" // "410"
				"linux"	"418" // "411"
			}
			"GetAutoaimVector_Float" // CBasePlayer::GetAutoaimVector(float) // done
			{
				"windows"	"422" // "415"
				"linux"	"421" // "414"
			}
			"PlayerRunCommand" // done
			{
				"windows"	"426" // "419"
				"linux"	"427" // "420"
			}
			"ModifyOrAppendPlayerCriteria" // done
			{
				"windows"	"430" // "423"
				"linux"	"431" // "424"
			}
			"CreateRagdollEntity" // done
			{
				"windows"	"432" // "425"
				"linux"	"433" // "426"
			}
			"IsFollowingPhysics" // done
			{
				"windows"	"434" // "427"
				"linux"	"435" // "428"
			}
			/* End CBasePlayer */
			
			
			
			/* CAI_BaseNPC */
			"NPCInit" // done
			{
				"windows"	"327" // "321"
				"linux"	"328" // "322"
			}
			"PostNPCInit" // done
			{
				"windows"	"328" // "322"
				"linux"	"329" // "323"
			}
			"StartNPC" // done
			{
				"windows"	"329" // "323"
				"linux"	"330" // "324"
			}
			"CleanupOnDeath" // done
			{
				"windows"	"330" // "324"
				"linux"	"331" // "325"
			}
			"CreateComponents" // done
			{
				"windows"	"331" // "325"
				"linux"	"332" // "326"
			}
			"CreateSenses" // done
			{
				"windows"	"332" // "326"
				"linux"	"333" // "327"
			}
			"CreateMoveProbe" // done
			{
				"windows"	"333" // "327"
				"linux"	"334" // "328"
			}
			"CreateMotor" // done
			{
				"windows"	"334" // "328"
				"linux"	"335" // "329"
			}
			"CreateLocalNavigator" // done
			{
				"windows"	"335" // "329"
				"linux"	"336" // "330"
			}
			"CreateNavigator" // done
			{
				"windows"	"336" // "330"
				"linux"	"337" // "331"
			}
			"CreatePathfinder" // done
			{
				"windows"	"337" // "331"
				"linux"	"338" // "332"
			}
			"CreateTacticalServices" // done
			{
				"windows"	"338" // "332"
				"linux"	"339" // "333"
			}
			"NPCThink" // done
			{
				"windows"	"339" // "333"
				"linux"	"340" // "334"
			}
			"RunAI" // done
			{
				"windows"	"340" // "334"
				"linux"	"341" // "335"
			}
			"GatherConditions" // done
			{
				"windows"	"341" // "335"
				"linux"	"342" // "336"
			}
			"PrescheduleThink" // done
			{
				"windows"	"342" // "336"
				"linux"	"343" // "337"
			}
			"OnScheduleChange" // done
			{
				"windows"	"344" // "338"
				"linux"	"345" // "339"
			}
			"OnStartSchedule" // done
			{
				"windows"	"345" // "339"
				"linux"	"346" // "340"
			}
			"SelectSchedule" // done
			{
				"windows"	"346" // "340"
				"linux"	"347" // "341"
			}
			"SelectFailSchedule" // done
			{
				"windows"	"347" // "341"
				"linux"	"348" // "342"
			}
			"TranslateSchedule" // done
			{
				"windows"	"348" // "342"
				"linux"	"349" // "343"
			}
			"StartTask" // done
			{
				"windows"	"349" // "344"
				"linux"	"350" // "344"
			}
			"RunTask" // done
			{
				"windows"	"350" // "346"
				"linux"	"351" // "345"
			}
			"IsInterruptable" // done
			{
				"windows"	"351" // "347"
				"linux"	"352" // "346"
			}
			"OnStartScene" //CAI_BaseNPC::OnStartScene(void) - nullsub
			{
				//FF 90 ? ? ? ? 83 BF ? ? ? ? ? 8B CF 0F 95 C0 88 83 - displ is our offs
				"windows"	"352" // "348"
				"linux"	"353" // "347"
			}
			"ShouldPlayerAvoid" // done
			{
				"windows"	"353" // "349"
				"linux"	"354" // "348"
			}
			"ShouldAlwaysThink" // done
			{
				"windows"	"356" // "352"
				"linux"	"357" // "351"
			}
			"PostRunStopMoving" // done
			{
				"windows"	"358" // "354"
				"linux"	"359" // "353"
			}
			"GetSchedule" // done
			{
				"windows"	"361" // "355"
				"linux"	"362" // "356"
			}
			"GetGlobalScheduleId" // done
			{
				"windows"	"363" // "357"
				"linux"	"364" // "358"
			}
			"TaskFail" // done
			{
				"windows"	"364" // "358"
				"linux"	"365" // "359"
			}
			"TaskName" // done
			{
				"windows"	"365" // "359"
				"linux"	"366" // "360"
			}
			"GetSchedulingErrorName" // done
			{
				"windows"	"367" // "361"
				"linux"	"368" // "362"
			}
			"BuildScheduleTestBits" // done
			{
				"windows"	"369" // "363"
				"linux"	"370" // "364"
			}
			"GetNewSchedule" // done
			{
				"windows"	"370" // "364"
				"linux"	"371" // "365"
			}
			"GetFailSchedule" // done
			{
				"windows"	"371" // "365"
				"linux"	"372" // "366"
			}
			"CanFlinch" // done
			{
				"windows"	"372" // "366"
				"linux"	"373" // "367"
			}
			"CheckFlinches" // done
			{
				"windows"	"373" // "367"
				"linux"	"374" // "368"
			}
			"PlayFlinchGesture" // done
			{
				"windows"	"374" // "368"
				"linux"	"375" // "369"
			}
			"GetRunningBehavior" // done
			{
				"windows"	"377" // "371"
				"linux"	"378" // "372"
			}
			"ShouldAcceptGoal" // done
			{
				"windows"	"378" // "372"
				"linux"	"379" // "373"
			}
			"OnClearGoal" // done
			{
				"windows"	"379" // "373"
				"linux"	"380" // "374"
			}
			"OnBehaviorChangeStatus" // done
			{
				"windows"	"380" // "374"
				"linux"	"381" // "375"
			}
			"AccessBehaviors" // done
			{
				"windows"	"381" // "375"
				"linux"	"382" // "376"
			}
			"NumBehaviors" // done
			{
				"windows"	"382" // "376"
				"linux"	"383" // "377"
			}
			"SelectIdealState" // done
			{
				"windows"	"385" // "379"
				"linux"	"386" // "378"
			}
			"OnStateChange" // done
			{
				"windows"	"387" // "381"
				"linux"	"388" // "382"
			}
			"UpdateEfficiency" // done
			{
				"windows"	"388" // "382"
				"linux"	"389" // "383"
			}
			"Wake" // done
			{
				"windows"	"389" // "383"
				"linux"	"390" // "384"
			}
			"SetActivity" // done
			{
				"windows"	"390" // "384"
				"linux"	"391" // "385"
			}
			"IsActivityMovementPhased" // done
			{
				"windows"	"391" // "385"
				"linux"	"392" // "386"
			}
			"OnChangeActivity" // done
			{
				"windows"	"392" // "386"
				"linux"	"393" // "387"
			}
			"QueryHearSound" // done
			{
				"windows"	"393" // "387"
				"linux"	"394" // "388"
			}
			"QuerySeeEntity" // done
			{
				"windows"	"394" // "388"
				"linux"	"395" // "389"
			}
			"OnLooked" // done
			{
				"windows"	"395" // "389"
				"linux"	"396" // "390"
			}
			"OnListened" // done
			{
				"windows"	"396" // "390"
				"linux"	"397" // "391"
			}
			"OnSeeEntity" // done
			{
				"windows"	"397" // "391"
				"linux"	"398" // "392"
			}
			"ShouldNotDistanceCull" // done
			{
				"windows"	"398" // "392"
				"linux"	"399" // "393"
			}
			"GetSoundInterests" // done
			{
				"windows"	"399" // "393"
				"linux"	"400" // "394"
			}
			"GetSoundPriority" // done
			{
				"windows"	"400" // "394"
				"linux"	"401" // "395"
			}
			"GetBestSound" // done
			{
				"windows"	"401" // "395"
				"linux"	"402" // "396"
			}
			"GetBestScent" // done
			{
				"windows"	"402" // "396"
				"linux"	"403" // "397"
			}
			"HearingSensitivity" // done
			{
				"windows"	"403" // "397"
				"linux"	"404" // "398"
			}
			"ShouldIgnoreSound" // done
			{
				"windows"	"404" // "398"
				"linux"	"405" // "399"
			}
			"ClearSenseConditions" // done
			{
				"windows"	"405" // "399"
				"linux"	"406" // "400"
			}
			"BestEnemy" // done
			{
				"windows"	"406" // "400"
				"linux"	"407" // "401"
			}
			"IsValidEnemy" // done
			{
				"windows"	"407" // "401"
				"linux"	"408" // "402"
			}
			"CanBeAnEnemyOf" // done
			{
				"windows"	"408" // "402"
				"linux"	"409" // "403"
			}
			"ShouldChooseNewEnemy" // done
			{
				"windows"	"409" // "403"
				"linux"	"410" // "404"
			}
			"GatherEnemyConditions" // done
			{
				"windows"	"410" // "404"
				"linux"	"411" // "405"
			}
			"StartTargetHandling" // done
			{
				"windows"	"412" // "406"
				"linux"	"413" // "406"
			}
			"CreateCustomTarget" // done
			{
				"windows"	"413" // "407"
				"linux"	"414" // "407"
			}
			"AllowedToIgnite" // done
			{
				"windows"	"415" // "409"
				"linux"	"416" // "408"
			}
			"IsCommandable" // done
			{
				"windows"	"417" // "411"
				"linux"	"418" // "412"
			}
			"IsPlayerAlly" // done
			{
				"windows"	"418" // "412"
				"linux"	"419" // "413"
			}
			"IsMedic" // done
			{
				"windows"	"419" // "413"
				"linux"	"420" // "414"
			}
			"IsCommandMoving" // done
			{
				"windows"	"420" // "414"
				"linux"	"421" // "415"
			}
			"ShouldAutoSummon" // done
			{
				"windows"	"421" // "415"
				"linux"	"422" // "416"
			}
			"SetCommandGoal" // done
			{
				"windows"	"422" // "416"
				"linux"	"423" // "417"
			}
			"ClearCommandGoal" // done
			{
				"windows"	"423" // "417"
				"linux"	"424" // "418"
			}
			"OnMoveOrder" // done
			{
				"windows"	"425" // "419"
				"linux"	"426" // "419"
			}
			"IsValidCommandTarget" // done
			{
				"windows"	"426" // "420"
				"linux"	"427" // "421"
			}
			"OnMoveToCommandGoalFailed" // done
			{
				"windows"	"427" // "421"
				"linux"	"428" // "422"
			}
			"GetSquadCommandRepresentative" // done
			{
				"windows"	"428" // "422"
				"linux"	"429" // "423"
			}
			"TargetOrder" // done
			{
				"windows"	"429" // "423"
				"linux"	"430" // "424"
			}
			"MoveOrder" // done
			{
				"windows"	"430" // "424"
				"linux"	"431" // "425"
			}
			"CanBeUsedAsAFriend" // done
			{
				"windows"	"431" // "425"
				"linux"	"432" // "426"
			}
			"CanRunAScriptedNPCInteraction" // done
			{
				"windows"	"432" // "426"
				"linux"	"433" // "427"
			}
			"CanPlaySentence" // done
			{
				"windows"	"434" // "427"
				"linux"	"435" // "428"
			}
			"PlayScriptedSentence" // done
			{
				"windows"	"436" // "430"
				"linux"	"" // "421"
			}
			"FOkToMakeSound" // done
			{
				"windows"	"437" // "431"
				"linux"	"438" // "432"
			}
			"JustMadeSound" // done
			{
				"windows"	"438" // "432"
				"linux"	"439" // "433"
			}
			"DeathSound" // done
			{
				"windows"	"439" // "433"
				"linux"	"440" // "434"
			}
			"AlertSound" // done
			{
				"windows"	"440" // "434"
				"linux"	"441" // "435"
			}
			"IdleSound" // done
			{
				"windows"	"441" // "435"
				"linux"	"442" // "436"
			}
			"PainSound" // done
			{
				"windows"	"442" // "436"
				"linux"	"443" // "437"
			}
			"FearSound" // done
			{
				"windows"	"443" // "437"
				"linux"	"444" // "438"
			}
			"LostEnemySound" // done
			{
				"windows"	"444" // "438"
				"linux"	"445" // "439"
			}
			"FoundEnemySound" // done
			{
				"windows"	"445" // "439"
				"linux"	"446" // "440"
			}
			"BarnacleDeathSound" // done
			{
				"windows"	"446" // "440"
				"linux"	"447" // "441"
			}
			"SpeakSentence" // done
			{
				"windows"	"447" // "441"
				"linux"	"448" // "442"
			}
			"ShouldPlayIdleSound" // done
			{
				"windows"	"448" // "442"
				"linux"	"449" // "443"
			}
			"MakeAIFootstepSound" // done
			{
				"windows"	"449" // "443"
				"linux"	"450" // "444"
			}
			"GetExpresser" // done
			{
				"windows"	"450" // "444"
				"linux"	"451" // "445"
			}
			"CanRespondToEvent" // done
			{
				"windows"	"451" // "445"
				"linux"	"452" // "446"
			}
			"RespondedTo" // done
			{
				"windows"	"452" // "446"
				"linux"	"453" // "447"
			}
			"PlayerHasIlluminatedNPC" // done
			{
				"windows"	"453" // "447"
				"linux"	"454" // "448"
			}
			"CapabilitiesGet" // done
			{
				"windows"	"454" // "448"
				"linux"	"455" // "449"
			}
			"IsNavigationUrgent" // done
			{
				"windows"	"455" // "449"
				"linux"	"456" // "450"
			}
			"ShouldFailNav" // done
			{
				"windows"	"456" // "450"
				"linux"	"457" // "451"
			}
			"ShouldBruteForceFailedNav" // done
			{
				"windows"	"457" // "451"
				"linux"	"458" // "452"
			}
			"GetTimeToNavGoal" // done
			{
				"windows"	"458" // "452"
				"linux"	"459" // "453"
			}
			"MovementCost" // done
			{
				"windows"	"459" // "453"
				"linux"	"460" // "454"
			}
			"CalcIdealYaw" // done
			{
				"windows"	"460" // "454"
				"linux"	"461" // "455"
			}
			"MaxYawSpeed" // done
			{
				"windows"	"461" // "455"
				"linux"	"462" // "456"
			}
			"AddFacingTarget_E_V_F_F_F" // done
			{
				"windows"	"462" // "456"
				"linux"	"465" // "459"
			}
			"AddFacingTarget_V_F_F_F" // done
			{
				"windows"	"463" // "457"
				"linux"	"464" // "458"
			}
			"AddFacingTarget_E_F_F_F" // done
			{
				"windows"	"464" // "458"
				"linux"	"463" // "457"
			}
			"IsJumpLegal" // done
			{
				"windows"	"466" // "460"
				"linux"	"467" // "461"
			}
			"StepHeight" // done
			{
				"windows"	"467" // "461"
				"linux"	"468" // "462"
			}
			"GetJumpGravity" // done
			{
				"windows"	"469" // "463"
				"linux"	"470" // "464"
			}
			"OverrideMove" // done
			{
				"windows"	"470" // "464"
				"linux"	"471" // "465"
			}
			"OverrideMoveFacing" // done
			{
				"windows"	"471" // "465"
				"linux"	"472" // "466"
			}
			"IsUnusableNode" // done
			{
				"windows"	"472" // "466"
				"linux"	"473" // "467"
			}
			"ValidateNavGoal" // done
			{
				"windows"	"473" // "467"
				"linux"	"474" // "468"
			}
			"IsCurTaskContinuousMove" // done
			{
				"windows"	"474" // "468"
				"linux"	"475" // "469"
			}
			"IsValidMoveAwayDest" // done
			{
				"windows"	"475" // "469"
				"linux"	"476" // "470"
			}
			"OnMovementFailed" // done
			{
				"windows"	"476" // "470"
				"linux"	"477" // "471"
			}
			"OnMovementComplete" // done
			{
				"windows"	"477" // "471"
				"linux"	"478" // "472"
			}
			"IsUnreachable" // done
			{
				"windows"	"478" // "472"
				"linux"	"479" // "473"
			}
			"OnObstructingDoor" // done
			{
				"windows"	"479" // "473"
				"linux"	"483" // "477"
			}
			"GetNodeViewOffset" // done
			{
				"windows"	"481" // "475"
				"linux"	"485" // "479"
			}
			"EyeOffset" // done
			{
				"windows"	"482" // "476"
				"linux"	"486" // "480"
			}
			"EyeLookTarget" // done
			{
				"windows"	"483" // "477"
				"linux"	"487" // "481"
			}
			"AddLookTarget_V" // done
			{
				"windows"	"484" // "478"
				"linux"	"489" // "483"
			}
			"AddLookTarget_E" // done
			{
				"windows"	"485" // "479"
				"linux"	"488" // "482"
			}
			"SetHeadDirection" // done
			{
				"windows"	"486" // "480"
				"linux"	"490" // "484"
			}
			"MaintainLookTargets" // done
			{
				"windows"	"487" // "481"
				"linux"	"491" // "485"
			}
			"ValidEyeTarget" // done
			{
				"windows"	"488" // "482"
				"linux"	"492" // "486"
			}
			"FacingPosition" // done
			{
				"windows"	"489" // "483"
				"linux"	"493" // "487"
			}
			"MaintainTurnActivity" // done
			{
				"windows"	"490" // "484"
				"linux"	"494" // "488"
			}
			"AimGun" // done
			{
				"windows"	"491" // "485"
				"linux"	"495" // "489"
			}
			"SetAim" // done
			{
				"windows"	"492" // "486"
				"linux"	"496" // "490"
			}
			"RelaxAim" // done
			{
				"windows"	"493" // "487"
				"linux"	"497" // "491"
			}
			"GetAlternateMoveShootTarget" // done
			{
				"windows"	"494" // "488"
				"linux"	"498" // "492"
			}
			"InputOutsideTransition" // !!! deleted ?
			{
				"windows"	"496" // "489"
				"linux"	"500" // "493"
			}
			"InputInsideTransition" // done
			{
				"windows"	"496" // "490"
				"linux"	"500" // "494"
			}
			"SetScriptedScheduleIgnoreConditions" // done
			{
				"windows"	"497" // "491"
				"linux"	"501" // "495"
			}
			"ScheduledMoveToGoalEntity" // done
			{
				"windows"	"498" // "492"
				"linux"	"502" // "496"
			}
			"ScheduledFollowPath" // done
			{
				"windows"	"499" // "493"
				"linux"	"503" // "497"
			}
			"GetEnemies" // done
			{
				"windows"	"500" // "494"
				"linux"	"504" // "498"
			}
			"UpdateEnemyMemory" // done
			{
				"windows"	"502" // "496"
				"linux"	"506" // "500"
			}
			"GetReactionDelay" // done
			{
				"windows"	"503" // "497"
				"linux"	"507" // "501"
			}
			"CanHolsterWeapon" // done
			{
				"windows"	"504" // "498"
				"linux"	"508" // "502"
			}
			"HolsterWeapon" // done
			{
				"windows"	"505" // "499"
				"linux"	"509" // "503"
			}
			"UnholsterWeapon" // done
			{
				"windows"	"506" // "500"
				"linux"	"510" // "504"
			}
			"OnRangeAttack1" // done
			{
				"windows"	"507" // "501"
				"linux"	"511" // "505"
			}
			"OnUpdateShotRegulator" // done
			{
				"windows"	"508" // "502"
				"linux"	"512" // "506"
			}
			"SquadSlotName" // done
			{
				"windows"	"510" // "504"
				"linux"	"514" // "508"
			}
			"SetSquad" // done
			{
				"windows"	"511" // "505"
				"linux"	"515" // "509"
			}
			"IsSilentSquadMember" // done
			{
				"windows"	"512" // "506"
				"linux"	"516" // "510"
			}
			"FindCoverPos_Entity" // done
			{
				"windows"	"513" // "507"
				"linux"	"517" // "511"
			}
			"FindCoverPos_Sound" // done
			{
				"windows"	"515" // "509"
				"linux"	"519" // "513"
			}
			"FindCoverPosInRadius" // done
			{
				"windows"	"514" // "508"
				"linux"	"518" // "512"
			}
			"IsValidCover" // done
			{
				"windows"	"516" // "510"
				"linux"	"520" // "514"
			}
			"IsValidShootPosition" // done
			{
				"windows"	"517" // "511"
				"linux"	"521" // "515"
			}
			"TestShootPosition" // done
			{
				"windows"	"518" // "512"
				"linux"	"522" // "516"
			}
			"IsCoverPosition" // done
			{
				"windows"	"519" // "513"
				"linux"	"523" // "517"
			}
			"CoverRadius" // done
			{
				"windows"	"520" // "514"
				"linux"	"524" // "518"
			}
			"GetMaxTacticalLateralMovement" // done
			{
				"windows"	"521" // "515"
				"linux"	"525" // "519"
			}
			"OnChangeHintGroup" // done
			{
				"windows"	"522" // "516"
				"linux"	"526" // "520"
			}
			"RangeAttack1Conditions" // done
			{
				"windows"	"524" // "518"
				"linux"	"528" // "522"
			}
			"RangeAttack2Conditions" // done
			{
				"windows"	"525" // "519"
				"linux"	"529" // "523"
			}
			"MeleeAttack1Conditions" // done
			{
				"windows"	"526" // "520"
				"linux"	"530" // "524"
			}
			"MeleeAttack2Conditions" // done
			{
				"windows"	"527" // "521"
				"linux"	"531" // "525"
			}
			"InnateRange1MinRange" // done
			{
				"windows"	"528" // "522"
				"linux"	"532" // "526"
			}
			"InnateRange1MaxRange" // done
			{
				"windows"	"529" // "523"
				"linux"	"533" // "527"
			}
			"OnBeginMoveAndShoot" // done
			{
				"windows"	"530" // "524"
				"linux"	"534" // "528"
			}
			"OnEndMoveAndShoot" // done
			{
				"windows"	"531" // "524"
				"linux"	"535" // "529"
			}
			"UseAttackSquadSlots" // done
			{
				"windows"	"532" // "526"
				"linux"	"536" // "530"
			}
			"FindNamedEntity" // done
			{
				"windows"	"533" // "527"
				"linux"	"537" // "531"
			}
			"ClearAttackConditions" // done
			{
				"windows"	"534" // "528"
				"linux"	"538" // "532"
			}
			"ShouldLookForBetterWeapon" // done
			{
				"windows"	"535" // "529"
				"linux"	"539" // "534"
			}
			"GiveWeapon" // done
			{
				"windows"	"536" // "530"
				"linux"	"540" // "534"
			}
			"OnGivenWeapon" // done
			{
				"windows"	"537" // "531"
				"linux"	"541" // "535"
			}
			"WeaponLOSCondition" // done
			{
				"windows"	"538" // "532"
				"linux"	"542" // "536"
			}
			"CurrentWeaponLOSCondition" // done
			{
				"windows"	"539" // "533"
				"linux"	"543" // "537"
			}
			"IsWaitingToRappel" // done
			{
				"windows"	"540" // "534"
				"linux"	"544" // "538"
			}
			"BeginRappel" // done
			{
				"windows"	"541" // "535"
				"linux"	"545" // "539"
			}
			"TranslateNavGoal" // done
			{
				"windows"	"542" // "536"
				"linux"	"546" // "540"
			}
			"GetDefaultNavGoalTolerance" // done
			{
				"windows"	"543" // "537"
				"linux"	"547" // "541"
			}
			"FCanCheckAttacks" // done
			{
				"windows"	"544" // "538"
				"linux"	"548" // "542"
			}
			"CheckAmmo" // done
			{
				"windows"	"545" // "539"
				"linux"	"549" // "543"
			}
			"FValidateHintType" // done
			{
				"windows"	"546" // "540"
				"linux"	"550" // "544"
			}
			"GetHintActivity" // done
			{
				"windows"	"547" // "541"
				"linux"	"551" // "545"
			}
			"GetHintDelay" // done
			{
				"windows"	"548" // "542"
				"linux"	"552" // "546"
			}
			"GetCoverActivity" // done
			{
				"windows"	"549" // "543"
				"linux"	"553" // "547"
			}
			"SetTurnActivity" // done
			{
				"windows"	"551" // "545"
				"linux"	"555" // "549"
			}
			"GetHitgroupDamageMultiplier" // done
			{
				"windows"	"552" // "546"
				"linux"	"556" // "550"
			}
			"PlayerInSpread" // done
			{
				"windows"	"553" // "547"
				"linux"	"557" // "551"
			}
			"InnateWeaponLOSCondition" // done
			{
				"windows"	"554" // "548"
				"linux"	"558" // "552"
			}
			"GetFlinchActivity" // done
			{
				"windows"	"555" // "549"
				"linux"	"559" // "553"
			}
			"GetShootEnemyDir" // done
			{
				"windows"	"556" // "550"
				"linux"	"560" // "554"
			}
			"CollectShotStats" // done
			{
				"windows"	"557" // "551"
				"linux"	"561" // "555"
			}
			"ShouldMoveAndShoot" // done
			{
				"windows"	"558" // "552"
				"linux"	"562" // "556"
			}
			"IsLightDamage" // done
			{
				"windows"	"559" // "553"
				"linux"	"563" // "557"
			}
			"IsHeavyDamage" // done
			{
				"windows"	"560" // "554"
				"linux"	"564" // "558"
			}
			"PickupWeapon" // done
			{
				"windows"	"561" // "555"
				"linux"	"565" // "559"
			}
			"PickupItem" // done
			{
				"windows"	"562" // "556"
				"linux"	"566" // "560"
			}
			"NotifyDeadFriend" // done
			{
				"windows"	"563" // "557"
				"linux"	"567" // "561"
			}
			"IsValidReasonableFacing" // done
			{
				"windows"	"565" // "559"
				"linux"	"569" // "563"
			}
			"GetReasonableFacingDist" // done
			{
				"windows"	"566" // "560"
				"linux"	"570" // "564"
			}
			"GetClassScheduleIdSpace" // done
			{
				"windows"	"567" // "561"
				"linux"	"571" // "565"
			}
			"GetSquadSlotDebugName" // done
			{
				"windows"	"568" // "562"
				"linux"	"572" // "566"
			}
			"IsCrouching" // done
			{
				"windows"	"569" // "563"
				"linux"	"573" // "567"
			}
			"Crouch" // done
			{
				"windows"	"570" // "564"
				"linux"	"574" // "568"
			}
			"Stand" // done
			{
				"windows"	"571" // "565"
				"linux"	"575" // "569"
			}
			"DesireCrouch" // done
			{
				"windows"	"572" // "566"
				"linux"	"576" // "570"
			}
			"IsCrouchedActivity" // done
			{
				"windows"	"573" // "567"
				"linux"	"577" // "571"
			}
			"ShouldProbeCollideAgainstEntity" // done
			{
				"windows"	"578" // "572"
				"linux"	"582"
			}
			"CalcYawSpeed" // done
			{
				"windows"	"0"
				"linux"	"480" // "474"
			}
			"OnCalcBaseMove" // done
			{
				"windows"	"1"
				"linux"	"481" // "475"
			}
			"OnObstructionPreSteer" // done
			{
				"windows"	"2"
				"linux"	"482" // "476"
			}
			"OnFailedSteer" // !!!
			{
				"windows"	"3"
				"linux"	"3"
			}
			"OnFailedLocalNavigation" // !!!
			{
				"windows"	"4"
				"linux"	"4"
			}
			"OnInsufficientStopDist" // !!!
			{
				"windows"	"5"
				"linux"	"5"
			}
			"OnMoveBlocked" // !!!
			{
				"windows"	"6"
				"linux"	"617" // "611"
			}
			"OnMoveExecuteFailed" // !!!
			{
				"windows"	"8"
				"linux"	"8"
			}
			
			/* CBaseFlex */
			"SetViewtarget" // done
			{
				"windows"	"222" // "216"
				"linux"	"223" // "217"
			}
			"StartSceneEvent" // done
			{
				"windows"	"223" // "217"
				"linux"	"224" // "218"
			}
			"ProcessSceneEvents" // done
			{
				"windows"	"224" // "218"
				"linux"	"225" // "219"
			}
			"ProcessSceneEvent" // done
			{
				"windows"	"225" // "219"
				"linux"	"226" // "220"
			}
			"ClearSceneEvent" // done
			{
				"windows"	"226" // "220"
				"linux"	"227" // "221"
			}
			"CheckSceneEventCompletion" // done
			{
				"windows"	"227" // "221"
				"linux"	"228" // "222"
			}
			"PlayScene" // done
			{
				"windows"	"228" // "222"
				"linux"	"229" // "223"
			}
			"PlayAutoGeneratedSoundScene" // done
			{
				"windows"	"229" // "223"
				"linux"	"230" // "224"
			}
			/* End CBaseFlex */
			
			
			
			/* CBasePropDoor */
			"GetOpenInterval" // done
			{
				"windows"	"229" // "223"
				"linux"	"267" // "261"
			}
			
			
			
			/* CBaseCombatWeapon */
			"Equip" // done
			{
				"windows"	"225" // "219"
				"linux"	"226" // "220"
			}
			"Drop" // done
			{
				"windows"	"226" // "220"
				"linux"	"227" // "221"
			}
			"SendWeaponAnim" // done
			{
				"windows"	"242" // "236"
				"linux"	"243" // "237"
			}
			"HasAnyAmmo" // done
			{
				"windows"	"248" // "242"
				"linux"	"249" // "243"
			}
			"HasPrimaryAmmo" // done
			{
				"windows"	"249" // "243"
				"linux"	"250" // "244"
			}
			"HasSecondaryAmmo" // done
			{
				"windows"	"250" // "244"
				"linux"	"251" // "245"
			}
			"CanHolster" // done
			{
				"windows"	"251" // "245"
				"linux"	"252" // "246"
			}
			"Deploy" // done
			{
				"windows"	"254" // "248"
				"linux"	"255" // "249"
			}
			"Holster" // done
			{
				"windows"	"255" // "249"
				"linux"	"256" // "250"
			}
			"ItemPreFrame" // done
			{
				"windows"	"264" // "258"
				"linux"	"265" // "259"
			}
			"ItemPostFrame" // done
			{
				"windows"	"265" // "259"
				"linux"	"266" // "260"
			}
			"WeaponIdle" // done
			{
				"windows"	"268" // "262"
				"linux"	"269" // "263"
			}
			"HandleFireOnEmpty" // done
			{
				"windows"   "269" // "263"
				"linux"	"270" // "264"
			}
			"CanPerformSecondaryAttack" // done
			{
				"windows"   "270" // "264"
				"linux"	"271" // "265"
			}
			"ShouldBlockPrimaryFire" // done
			{
				"windows"   "271" // "265"
				"linux"	"272" // "266"
			}
			"IsWeaponZoomed" // done
			{
				"windows"   "272" // "266"
				"linux"	"273" // "267"
			}
			"Reload" // done
			{
				"windows"   "276" // "270"
				"linux"	"277" // "271"
			}
			"PrimaryAttack" // done
			{
				"windows"	"279" // "273"
				"linux"	"280" // "274"
			}
			"SecondaryAttack" // done
			{
				"windows"	"280" // "274"
				"linux"	"281" // "275"
			}
			"GetPrimaryAttackActivity" // done
			{
				"windows"	"281" // "275"
				"linux"	"282" // "276"
			}
			"GetSecondaryAttackActivity" // done
			{
				"windows"	"282" // "276"
				"linux"	"283" // "277"
			}
			"GetBulletType" // !!!
			{
				"windows"	"287" // "279"
				"linux"	"287" // "280"
			}
			"GetBulletSpread" // done
			{
				"windows"	"287" // "281"
				"linux"	"287" // "281"
			}
			"GetFireRate" // done
			{
				"windows"	"289" // "283"
				"linux"	"290" // "284"
			}
			"GetMinBurst" // done
			{
				"windows"	"290" // "284"
				"linux"	"291" // "285"
			}
			"GetMaxBurst" // done
			{
				"windows"	"291" // "285"
				"linux"	"292" // "286"
			}
			"GetMinRestTime" // done
			{
				"windows"	"292" // "286"
				"linux"	"293" // "287"
			}
			"GetMaxRestTime" // done
			{
				"windows"	"293" // "287"
				"linux"	"294" // "288"
			}
			"GetRandomBurst" // done
			{
				"windows"	"294" // "288"
				"linux"	"295" // "289"
			}
			"WeaponSound" // done
			{
				"windows"	"295" // "289"
				"linux"	"296" // "290"
			}
			"AddViewKick" // done
			{
				"windows"	"304" // "298"
				"linux"	"305" // "299"
			}
			"GetProficiencyValues" // done
			{
				"windows"	"297" // "291"
				"linux"	"298" // "292"
			}
			"Weapon_SetActivity" //CBaseCombatWeapon::SetActivity // done
			{
				"windows"	"303" // "297"
				"linux"	"304" // "298"
			}
			"CanBePickedUpByNPCs" // done
			{
				"windows"	"312" // "306"
				"linux"	"313" // "307"
			}
			"GetViewModel" // done
			{
				"windows"	"314" // "308"
				"linux"	"315" // "309"
			}
			"GetWorldModel" // done
			{
				"windows"	"315" // "309"
				"linux"	"316" // "310"
			}
			"GetMaxClip1" // done
			{
				"windows"	"317" // "311"
				"linux"	"318" // "312"
			}
			"GetMaxClip2" // done
			{
				"windows"	"318" // "312"
				"linux"	"319" // "313"
			}
			"GetSlot" // done
			{
				"windows"	"326" // "320"
				"linux"	"327" // "321"
			}
			"UsesClipsForAmmo1" // done
			{
				"windows"	"332" // "326"
				"linux"	"333" // "327"
			}
			"UsesClipsForAmmo2" // done
			{
				"windows"	"333" // "327"
				"linux"	"334" // "328"
			}
			"ActivityOverride" // done
			{
				"windows"	"347" // "341"
				"linux"	"348" // "342"
			}
			"ActivityList" // done
			{
				"windows"	"348" // "342"
				"linux"	"349" // "343"
			}
			//"ActivityListCount" //inlined
			//{
			//	"windows"	"341"
			//}
			"Weapon_CapabilitiesGet" //CBaseCombatWeapon::CapabilitiesGet // done
			{
				"windows"	"356" //"352"
				"linux"	"357" // "353"
			}
			"WeaponRangeAttack1Condition" // done
			{
				"windows"	"358" // "354"
				"linux"	"359" // "355"
			}
			"WeaponRangeAttack2Condition" // !!!
			{
				"windows"	"359" // "355"
				"linux"	"360" // "356"
			}
			"WeaponMeleeAttack1Condition" // done
			{
				"windows"	"360" // "356"
				"linux"	"361" // "357"
			}
			"WeaponMeleeAttack2Condition" // done
			{
				"windows"	"361" // "357"
				"linux"	"362" // "358"
			}
			"Operator_HandleAnimEvent" // done
			{
				"windows"	"363" // "359"
				"linux"	"364" // "360"
			}
			"Operator_ForceNPCFire" // done
			{
				"windows"	"364" // "360"
				"linux"	"365" // "361"
			}
			"m_Activity" // CBaseCombatWeapon::SetIdealActivity // !!! done
			{
				// TODO: "windows"
				"linux"	"1240" // "1180"
			}
			/* End CBaseCombatWeapon */

			/* CAI_GoalEntity */
			"InputActivate" // done
			{
				"windows"	"194" // "188"
				"linux"	"195" // "189"
			}
			"InputUpdateActors" // done
			{
				"windows"	"195" // "189"
				"linux"	"196" // "190"
			}
			"InputDeactivate" // done
			{
				"windows"	"196" // "190"
				"linux"	"197" // "191"
			}
			"EnableGoal" // done
			{
				"windows"	"197" // "191"
				"linux"	"200" // "194"
			}
			"DisableGoal" // done
			{
				"windows"	"198" // "192"
				"linux"	"201" // "195"
			}

			/* CBaseGrenadeWeapon */
			"EmitGrenade" // done
			{
				"windows" "394" // "388"
				"linux" "395" // "389"
			}
			
			/* CRotorWashShooter */
			"DoWashPush" // done
			{
				"windows"	"0" // TODO
				"linux"	"196" // "190"
			}


			
			/* CBaseFilter */
			"PassesFilterImpl" // done
			{
				"windows"	"194" // "188"
				"linux"	"195" // "189"
			}



			/* CBaseProp */
			"OverridePropdata" // done
			{
				"windows"	"222" // "216"
				"linux"	"223" // "217"
			}




			/* CPropVehicleDriveable */
			"DriveVehicle" // done
			{
				"windows"	"228" // "222"
				"linux"	"230" // "224"
			}
			"DampenEyePosition" // done
			{
				"windows"	"223" // "217"
				"linux"	"225" // "219"
			}
			"CreateServerVehicle" // done
			{
				"windows"	"226" // "220"
				"linux"	"228" // "222"
			}
			"IsOverturned" // done
			{
				"windows"	"229" // "223"
				"linux"	"231" // "225"
			}
			"IsVehicleBodyInWater" // done
			{
				"windows"	"230" // "224"
				"linux"	"232" // "226"
			}
			/* CPropVehicleDriveable / IPropVehicleDriveable */
			"GetDriver" // done
			{
				//"windows"	"0"
				"linux"	"233" // "227"
			}
			"SetupMove" // done
			{
				//"windows"	"2"
				"linux"	"235" // "229"
			}
			"ProcessMovement" // done
			{
				// "windows"	"3"
				"linux"	"236" // "3"
			}
			"CanEnterVehicle" // done
			{
				// "windows"	"5"
				"linux"	"238" // "5"
			}
			"CanExitVehicle" // done
			{
				// "windows"	"6"
				"linux"	"239" // "6"
			}
			"EnterVehicle" // done
			{
				// "windows"	"9"
				"linux"	"242" // "9"
			}
			"ExitVehicle" // done
			{
				// "windows"	"11"
				"linux"	"246" // "11"
			}
			"AllowBlockedExit" // done
			{
				// "windows"	"12"
				"linux"	"243" // "12"
			}
			"PassengerShouldReceiveDamage" // done
			{
				// "windows"	"15"
				"linux"	"248" // "15"
			}

			/* CRagdollProp */
			"SetDamageEntity" // done
			{
				"windows"   "222" // "216"
				"linux"	"223" // "217"
			}
			"m_ragdoll" // !!! done
			{
				//TODO: "windows"   "216"
				"linux"	"1208" // "1148"
			}

			/* IDrivableVehicle */

			/* Variables Offset! */
			"m_nTargetNodeID" // "Node is visible to player" // done
			{
				// "windows"	"884"
				"linux"	"964" // "904"
			}
			"m_pNetwork" // "****** MAP CONTAINS DUPLICATE HAMMER NODE IDS! CHECK FOR PROBLEM", 8B 80 ? ? ? ? 3B 58 04 0F 8C ? ? ? ? F6 45 D9 01 // done
			{
				// "windows"	"836"
				"linux"	"912" // "856"
			}


			/* CBaseEntity */
			"m_pLink"	// 51 53 8B ? ? ? 55 8B ? ? ? 56 57 33  // done
			{
				// sig doesn't work anymore.. but what you can try doing is find baseentity::m_target and subtract it by 4
				"windows"	"216"
				"linux"	"236"
			}

			
			/* CBaseFlex */
			"m_LocalToGlobal"	// Unable to find mapping for flexcontroller %i, settings %p on %i/ // done
			{
				// "windows"	"1564"
				"linux"	"1644" // "1584"
			}

			/* CSceneEntity */
			"m_pRecipientFilter"	// "snd_mixahead", 8B 8F ? ? ? ? 89 45 08 85 C9 74 6D // done
			{
				// "windows"	"1548"
				"linux"	"1628" // "1568"
			}
			"m_pScene" // 83 BE ? ? ? ? ? 0F 84 ? ? ? ? 8B 86 ? ? ? ? BA ? ? ? ? D9 86 ? ? ? ? 85 C0 - first cmp // done
			{
				// "windows"	"1004"
				"linux"	"1084" // "1024"
			}




			/* BaseNPC */
			// all of this should be sig scanned..
			"m_Conditions" // done
			{
				//8D 8E ? ? ? ? 85 C9 74 19, +2
				// "windows"	"2160"
				"linux"	"2240" // "2180"
			}
			"m_pSchedule"	// "Schedule cleared: %s\" // done
			{
				// its should be the 3rd assignment below the =256 one.
				// alternatively, you can look into CAI_BaseNPC::SetSchedule
				// "windows"	"2092"
				"linux"	"2172" // "2112"
			}
			"m_pSquad" // above "*Squad Leader**" // done
			{
				// "windows"	"2748"
				"linux"	"2828" // "2768"
			}
			"m_CustomInterruptConditions" // inside CAI_BaseNPC::ClearCustomInterruptCondition // done ?
			{
				// "windows"	"2192" //2244
				"linux"	"2320" // "2260"
			}
			"m_poseMove_Yaw" // move_yaw // done ?
			{
				// "windows"	"2156"
				"linux"	"2236" // "2176"
			}
			"m_InverseIgnoreConditions" // 81 C6 ? ? ? ? 74 37 C7 06 // done ?
			{
				// "windows"	"2256"
				"linux"	"2336" // "2276"
			}
			"m_poseAim_Pitch" // aim_pitch (or - 2*sizeof(int) from m_poseMove_Yaw) // done ?
			{
				// "windows"	"2148"
				"linux"	"2228" // "2168"
			}
			"m_poseAim_Yaw" // aim_yaw // done ?
			{
				// "windows"	"2152"
				"linux"	"2232" // "2172"
			}
			"m_ConditionsPreIgnore" // 85 84 B7 ? ? ? ? 5F 0F 95 C0 5E  (not 100% sure) // done ?
			{
				// "windows"	"2160"//"2220"
				"linux"	"2380" // "2320"
			}
			"m_bInChoreo" // not used // done ?
			{
				// TODO: "windows"	"2092"
				"linux"	"2380" // "2320"
			}



			/* CSkyCamera */
			"m_skyboxData" // done ?
			{
				// "windows"	"828"
				"linux"	"928" // "868"
			}



			/* CRagdollProp */
			//"m_ragdoll"
			//{
			//	"windows"	"1128"//1152?
			//}




			/* CGib */
			"m_lifeTime" // done ?
			{
				// "windows"	"1136"
				"linux"	"1216" // "1156"
			}
			"m_bForceRemove" // done
			{
				// "windows"	"1140"
				"linux"	"1220" // "1160"
			}
			"m_material" // done ?
			{
				// "windows"	"1132"
				"linux"	"1212" // "1152"
			}
			"m_cBloodDecals" // done ?
			{
				// "windows"	"1128"
				"linux"	"1208" // "1148"
			}
			"m_bloodColor" // done ?
			{
				// "windows"	"1152"
				"linux"	"1232" // "1172"
			}


			/* CBasePlayer */
			"m_iVehicleAnalogBias" // below mov [blah+XXX], 0 below "PlayerEnteredVehicle" // done ?
			{
				// TODO: "windows"	""
				"linux"	"2832" // "2772"
			}
			
			/* CCollisionProperty */
			
			"m_flRadius"	// CCollisionProperty::m_flRadius // done ?
			{
				// "windows"	 "404" // plain offset is "56" but i think we've to add |this|offs of CCollisionProperty
				"linux" "426" // "366"
			}
			
			// I BELIVE THE STUFF BELOW IS NOT REQUIRED
			/*"m_vecSurroundingMins"
			{
				"windows"	"396"
			}
			"m_vecSurroundingMaxs"
			{
				"windows"	"408"
			}*/



			/* CPathTrack */
			"m_nIterVal" // done
			{
				// TODO: "windows"	"800"
				"linux"	"932" // "872"
			}



			/* Global Variables (windows only) */
			"g_EntityCollisionHash"
			{
				"windows"	"2"
			}
			"g_WorldEntity"
			{
				"windows"	"2"
			}
			"g_vecAttackDir"
			{
				"windows"	"1"
			}
			"m_DefaultRelationship"
			{
				"windows"	"5"
			}
			"m_lastInteraction"
			{
				"windows"	"1"
			}
			"g_SoundController"
			{
				"windows"	"3"
			}
			"decalsystem"
			{
				"windows"	"5"
			}
			"m_pActivitySR"
			{
				"windows"	"5"
			}
			"m_iNumActivities"
			{
				"windows"	"32"
			}
			"m_pEventSR"
			{
				"windows"	"22"
			}
			"m_iNumEvents"
			{
				"windows"	"8"
			}
			"g_pPredictionSystems"
			{
				"windows"	"6"
			}
			"g_AI_SensedObjectsManager"
			{
				"windows"	"1"
			}
			"my_g_MultiDamage"
			{
				"windows"	"2"
			}
			"g_Templates"
			{
				"windows"	"1"
			}
			"g_EntityListPool"
			{
				"windows"	"115"
			}
			"g_CEventQueue"
			{
				"windows"	"126"
			}
			"g_PostSimulationQueue"
			{
				"windows"	"1"
			}
			"EventQueuePrioritizedEvent_t_s_Allocator"
			{
				"windows"	"17"
			}
			"g_TouchTrace"
			{
				"windows"	"11"
			}
			"gm_AllHints"
			{
				"windows"	"9"
			}
			"s_GameSystems"
			{
				"windows"	"32"
			}
			"AI_Waypoint_t_s_Allocator"
			{
				"windows"	"1"
			}
			"g_AIFriendliesTalkSemaphore"
			{
				"windows"	"69"
			}
			"g_AIFoesTalkSemaphore"
			{
				"windows"	"74"
			}
			"g_pNotify"
			{
				"windows"	"2"
			}
			"gm_TypedHints"
			{
				"windows"	"10"
			}
			"s_pSymbolTable"
			{
				"windows"	"15"
			}
			"g_interactionHitByPlayerThrownPhysObj"
			{
				"windows"	"2"
			}
			"g_AI_SquadManager"
			{
				"windows"	"5"
			}
			"g_PhysWorldObject"
			{
				"windows"	"12"
			}
			"g_Collisions"
			{
				"windows"	"14"
			}
			"sm_pSingleton"
			{
				"windows"	"2"
			}
			"g_interactionScriptedTarget"
			{
				"windows"	"2"
			}
			
			// BELOW R ADDED 1s
			
			// only required for windows
			"g_SimThinkManagerOffs"
			{
				"windows"   "1"
			}
			
			"SimThink_CallOffs" // offset to E8 -->?? ?? ?? ??<--
			{
				"windows"   "1"
			}
			
			"CBaseAnimating::CStudioHdr"
			{
				"windows"   "1104"
			}
			
			//"m_bFireOnEmpty" //CBaseCombatWeapon::m_bFireOnEmpty
			//{
			//	"windows"   "1141"
			//	"linux"	 "1161"
			//}
			//"m_iPrimaryAmmoType______" //CBaseCombatWeapon::m_iPrimaryAmmoType
			//{
			//	"windows"   "1188"
			//}
			//"m_iSecondaryAmmoType______" //CBaseCombatWeapon::m_iSecondaryAmmoType
			//{
			//	"windows"   "1192"
			//}
			
			// DECLARE_DATAMAP not working?
			"m_fMinRange1" // done ?
			{
				// "windows"   "1212"
				"linux"   "1292" // "1232"
			}
			"m_fMinRange2" // done ?
			{
				// "windows"   "1216"
				"linux"   "1296" // "1236"
			}
			"m_fMaxRange1" // done ?
			{
				// "windows"   "1220"
				"linux"   "1300" // "1240"
			}
			"m_fMaxRange2" // done ?
			{
				// "windows"   "1224"
				"linux"   "1304" // "1244"
			}
		}
	}
	"#default"
	{
		"Signatures"
		{
			//"SwitchTeam"
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\x83\xEC\x2A\x89\x4D\x2A\x8B\x45\x2A\x50\xE8\x2A\x2A\x2A\x2A\x83\xC4\x04\x85\xC0\x74"
			//	"linux" "_ZN9CCSPlayer10SwitchTeamEi"
			//}
			//"RoundRespawn"
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\x51\x89\x2A\x2A\x8B\x2A\x2A\x8B\x10\x8B"
			//	"linux" "_ZN9CCSPlayer12RoundRespawnEv"
			//}
			//"FindEntityByClassname"
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\x53\x56\x57\x8B\xF9\x8B\x4D\x08"
			//}
			//"FindEntityByName"
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x0C\x56\x8B\xF1\x85\xDB\x74\x2A"
			//}
			"FireOutput"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x24\x01\x00\x00\x53"
				"linux" "@_ZN17CBaseEntityOutput10FireOutputE9variant_tP11CBaseEntityS2_f"
			}
			"PhysIsInCallback" // Changing collision rules within a callback, call below cmp dword ptr [esi+1E0h], 0
			{
				"library"	"server"
				"windows"	"\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x0E\x8B\x01\x8B\x80\x2A\x2A\x2A\x2A\xFF\xD0\x84\xC0\x75\x09\x83\x3D\x2A\x2A\x2A\x2A\x2A\x7E\x03"
				"linux" "@_Z16PhysIsInCallbackv"
			}
			"CreateGameRulesObject"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\x8B\x01\x6A\x01"
			}
			"g_pGameRules"
			{
				"library"	"server"
				"linux"	"@g_pGameRules"
			}
			"SetNextThink"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x45\x08\x0F\x2E\x05\x2A\x2A\x2A\x2A\x53"
				"linux" "@_ZN11CBaseEntity12SetNextThinkEfPKc"
			}
			"SetHullSizeNormal"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x56\x8B\xF1\x80\xBE\x2A\x2A\x2A\x2A\x2A\x75\x0A"
				"linux" "@_ZN11CAI_BaseNPC17SetHullSizeNormalEb"
			}
			"TranslateActivity" //CAI_BaseNPC::TranslateActivity
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x14\x53\x8B\x5D\x08\x56\x8B\xF1"
				"linux" "@_ZN11CAI_BaseNPC17TranslateActivityE8ActivityPS0_"
			}
			//"SimThink_EntityChanged" // CBaseEntity::OnRestore(), first call
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\x53\x57\x8B\x7D\x08\x8B\xD9\xF6\x87\x2A\x2A\x2A\x2A\x2A\x0F\x85\x2A\x2A\x2A\x2A\x8B\x07"
			//}
			"SimThink_EntityChanged_cdecl" // SigScan a call to this func
			{
				"library"	"server"
				"windows"	"\xE8\x2A\x2A\x2A\x2A\x8B\x55\xFC\x83\xC4\x04\xEB\x0D"
				"linux" "@_Z22SimThink_EntityChangedP11CBaseEntity"
			}
			"g_SimThinkManager" // Sig to find g_SimThinkManager ptr
			{
				"library"   "server"
				"windows"   "\xB9\x2A\x2A\x2A\x2A\x50\xE8\x2A\x2A\x2A\x2A\x33\xFF\xC6\x45\xF4\x00"
				"linux"	 "@g_SimThinkManager"
			}
			"SetSolid"
			{
				"library"	"server"
				"windows"   "\x55\x8B\xEC\x83\xEC\x18\x53\x56\x8B\xF1\x8A\x4E\x41"
				"linux" "@_ZN18CCollisionProperty8SetSolidE11SolidType_t"
			}
			"SetSolidFlags"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x51\x8B\x45\x08\x53\x56\x57\x8B\xF9"
				"linux" "@_ZN18CCollisionProperty13SetSolidFlagsEi"
			}
			"ReportEntityFlagsChanged" // It's the only func that's called from CBaseEntity::AddFlag
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\xF6\x86"
				"linux" "@_ZN17CGlobalEntityList24ReportEntityFlagsChangedEP11CBaseEntityjj"
			}
			"SetState" //CAI_BaseNPC::SetState
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\x8B\xF1\x57\x8B\x7D\x08"
				"linux" "@_ZN11CAI_BaseNPC8SetStateE9NPC_STATE"
			}
			"DispatchUpdateTransmitState" // "%s put to sleep while in Scripted stat" -> AddEffect() -> Last Call => CBaseEntity::DispatchUpd..
			{
				"library"	"server"
				"windows"	"\x80\xB9\x2A\x2A\x2A\x2A\x2A\x8B\x41\x18\x74\x0A"
				"linux" "@_ZN11CBaseEntity27DispatchUpdateTransmitStateEv"
			}
			"SetSchedule_Int"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\xFF\x75\x08\x8B\xF1\xE8"
				"linux" "@_ZN11CAI_BaseNPC11SetScheduleEi"
			}
			"CAI_BaseNPC::Precache"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x51\x56\x8D\x45\xFC\x8B\xF1\x68\x2A\x2A\x2A\x2A\x50\xE8\x2A\x2A\x2A\x2A\x83\xC4\x08\x8B\x00\xA3\x2A\x2A\x2A\x2A\x83\xBE"
				"linux" "@_ZN11CAI_BaseNPC8PrecacheEv"
			}
			"SetLocalOrigin"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x83\xEC\x10\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x2A\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x2A\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\x8B\x06\x89\x45\xF0\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x8B\x46\x04\x89\x45\xF4\x8B\x46\x08\x89\x45\xF8\x9F\xF6\xC4\x44\x7A\x28\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x9F\xF6\xC4\x44\x7A\x16\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x9F\xF6\xC4\x44\x0F\x8B\x2A\x2A\x2A\x2A\x6A\x01\xE8\x2A\x2A\x2A\x2A\x56"
				"linux" "@_ZN11CBaseEntity14SetLocalOriginERK6Vector"
			}
			"PhysicsTouchTriggers"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x56\x57\x8B\xF9\x8B\x77\x18"
				"linux" "@_ZN11CBaseEntity20PhysicsTouchTriggersEPK6Vector"
			}
			"SetGroundEntity" // CBaseEntity::SetGroundEntity
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\xF9\x8B\x97\x00\x02\x00\x00"
				"linux" "@_ZN11CBaseEntity15SetGroundEntityEPS_"
			}
			"SetAbsVelocity" // "nhandled input: (%s) -> (%s,%"  down 3 function
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x53\x56\x8B\x75\x08\x8B\xD9\xF3\x0F\x10\x06"
				"linux" "@_ZN11CBaseEntity14SetAbsVelocityERK6Vector"
			}
			"AutoMovement" // only caller of the func that has "--\n%s current org: %f %f\n" (float, CBaseEnt, AIMove)
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x05\x2A\x2A\x2A\x2A\x83\xEC\x28"
				"linux" "@_ZN11CAI_BaseNPC12AutoMovementEfP11CBaseEntityP13AIMoveTrace_t"
			}
			"EndTaskOverlay"	// "TaskFail -> %s\n" (first func calleD) | TODO: SIG IS UNSTABLE
			{
				"library"	"server"
				"windows"	"\x81\xC1\xE0\x0A\x00\x00\xE9"
				"linux" "@_ZN11CAI_BaseNPC14EndTaskOverlayEv"
			}
			"SetIdealActivity"	// "SetIdealActivity : %s: %s -> %s\" Has 2 calls to the same func (func has str: 'ACT_INVALID')
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x8B\x4D\x08\x83\xF9\x02"
				"linux" "@_ZN11CAI_BaseNPC16SetIdealActivityE8Activity"
			}
			"TakeDamage"	// "CBaseEntity::TakeDamage:  with inputInfo.GetDamageForce() == v"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x70\x57\x8B\xF9\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9"
				//old/other?:: "\x55\x8B\xEC\x83\xEC\x68\x57\x8B\xF9\x8B\x0D"
				"linux" "@_ZN11CBaseEntity10TakeDamageERK15CTakeDamageInfo"
			}
			"SetAbsAngles"  // "allangles"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x70\x53\x56\x8B\xF1"
				"linux" "@_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
			}
			"StudioFrameAdvanceManual"	// "m_fBoneCacheFlags" down function | TODO: DOES THIS WORK?
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x80\xBE\x2A\x2A\x00\x00\x00\x0F\x85\x2A\x00\x00\x00\x83\x2A\x2A\x2A\x00\x00\x00\x75\x10\xE8\x2A\x2A\x2A\x2A\x85\xC0"
				"linux" "@_ZN14CBaseAnimating24StudioFrameAdvanceManualEf"
			}
			"Dissolve"	// "ragdoll_dissolved"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x80\x7D\x10\x00\x56\x57"
				"linux"	 "@_ZN14CBaseAnimating8DissolveEPKcfbi6Vectori"
			}
			"SetAbsOrigin"	// NOPE "ai_hint"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x40\x56\x57\x8B\xF1"
				"linux" "@_ZN11CBaseEntity12SetAbsOriginERK6Vector"
			}
			"SetLocalAngles"	// "Bad SetLocalAngles(%f,%f,%f) on %s\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x83\xEC\x10\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x2A\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x56\x2A\x0F\x2F\xD0\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\x8B\x06\x89\x45\xF0\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x8B\x46\x04\x89\x45\xF4\x8B\x46\x08\x89\x45\xF8\x9F\xF6\xC4\x44\x7A\x28\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x9F\xF6\xC4\x44\x7A\x16\xF3\x0F\x10\x45\x2A\x0F\x2E\x87\x2A\x2A\x2A\x2A\x9F\xF6\xC4\x44\x0F\x8B\x2A\x2A\x2A\x2A\x6A\x02\xE8\x2A\x2A\x2A\x2A"
				"linux" "@_ZN11CBaseEntity14SetLocalAnglesERK6QAngle"
			}
			"SelectWeightedSequence" // SelectWeightedSequence(CStudioHdr *, int, int)
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x75\x05\x33\xC0\x5E\x5D\xC3\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x84\xC0\x74\xF0\x8B\xCE"
				"linux" "@_Z22SelectWeightedSequenceP10CStudioHdrii"
			}
			"CBaseCombatCharacter::OnTakeDamage" // "%f: Player %s at [%0.2f %0.2f %0.2f] t"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x57\x8B\xF9\x80\xBF\x2A\x2A\x2A\x2A\x2A\x75"
				"linux" "@_ZN20CBaseCombatCharacter12OnTakeDamageERK15CTakeDamageInfo"
			}
			"ActivityList_RegisterPrivateActivity" // "**\nShared<->Private Activity collisio"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xFF\x75\x08\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x78\x2A\x8B\x0D\x2A\x2A\x2A\x2A\x8D\x04\xC1\x85\xC0\x74\x2A\x66\x83\x78\x06"
				"linux"	 "@_Z36ActivityList_RegisterPrivateActivityPKc"
			}
			"EventList_RegisterPrivateEvent" // "***\nShared<->Private Event collision!\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xFF\x75\x08\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x78\x2A\x8D\x0C\x40\xA1\x2A\x2A\x2A\x2A\x8D\x04\x88\x85\xC0\x74\x2A\x66\x83"
				"linux"	 "@_Z30EventList_RegisterPrivateEventPKc"
			}
			"GetActivityID"	// "entry_activity"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x75\x2A\x83\xC8\xFF"
				"linux" "@_ZN11CAI_BaseNPC13GetActivityIDEPKc"
			}
			"ShouldBrushBeIgnored"  // search its caller in CTraceFilterEntity vtable
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x55\x08\x8B\x42\x5C"
				"linux" "@_ZN13CAI_MoveProbe20ShouldBrushBeIgnoredEP11CBaseEntity"
			}
			"NPCPhysics_CreateSolver"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x80\x7D\x10\x00\x56\x8B\x75\x0C"
				"linux"	 "@_Z23NPCPhysics_CreateSolverP11CAI_BaseNPCP11CBaseEntitybf"
			}
			"PrecacheScriptSound" // PrecacheScriptSound '%s' failed
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x8B\x0D\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x57\x8B\x01\x56\xFF\x50\x1C\x8B\x0D\x2A\x2A\x2A\x2A\x8B\xF8\x57\x8B\x11\x8B\x52\x20\xFF\xD2\x84\xC0\x0F"
				"linux" "@_ZN11CBaseEntity19PrecacheScriptSoundEPKc"
				// windows is CSoundEmitterSystem::PrecacheScriptSound
				// linux is CBaseEntity::PrecacheScriptSound
			}
			"EmitSound_char_float_pfloat"	// "UTIL_EmitAmbientSound:  Sentence emitte" , EmitSound( const char *soundname, float soundtime = 0.0f, float *duration = NULL ); down function
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x7C\x8B\x15\x2A\x2A\x2A\x2A\x53\x57\x33\xFF"
				"linux" "@_ZN11CBaseEntity9EmitSoundEPKcfPf"
			}
			"EmitSound_filter_int_char_vector_float_pfloat" // "GenericNPC.GunSound"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x54\x83\x7D\x10\x00"
				"linux" "@_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriPKcPK6VectorfPf"
			}
			"EmitSound_filter_int_struct" 	// "EmitSound:  Raw wave emitted '%s' (ent" down func
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x8B\x0D\x2A\x2A\x2A\x2A\x53\x56\x57\x33\xF6\x33\xFF\x89\x75\xF4\x89\x7D\xF8\x8B\x41\x08\x85\xC0\x74\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x68\xE3\x04\x00\x00"
				"linux" "@_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriRK11EmitSound_t"
			}
			"EmitSoundByHandle"	// "EmitSound:  Raw wave emitted '%s' (ent" last call
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\x2A\x2A\x2A\x2A\x00\xF3\x0F\x2A\x2A\x2A\x2A\x2A\x2A\x53\x8B"
				"linux" "@_ZN11CBaseEntity9EmitSoundER16IRecipientFilteriRK11EmitSound_tRs"
			}
			"HaveSequenceForActivity" // "Schedule cleared: %s\n" above function  eax, 17h call
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\xF9\x80\xBF\x2A\x2A\x2A\x2A\x2A\x75"
				"linux"	 "@_ZN11CAI_BaseNPC23HaveSequenceForActivityE8Activity"
			}
			"MoveLimit" // CAI_MoveProbe::MoveLimit - call above "	  Nodes connect for jumping"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x9C\x00\x00\x00\x53\x56\x57\x6A\x38"
				"linux" "@_ZN13CAI_MoveProbe9MoveLimitE12Navigation_tRK6VectorS3_jPK11CBaseEntityfjP13AIMoveTrace_t"
			}
			"SetEnemy"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\x8B\xF1\x57\x8B\x8E\x2A\x2A\x2A\x2A\x83\xF9\xFF\x74\x1E"
				"linux" "@_ZN11CAI_BaseNPC8SetEnemyEP11CBaseEntityb"
			}
			"CBaseEntity::GetModel" // only required on the win
			{
				"library"   "server"
				"windows"   "\xA1\x2A\x2A\x2A\x2A\x56\x8B\x30\x8B\x01"
				"linux"	 "@_ZN11CBaseEntity8GetModelEv"
			}
			"LockStudioHdr" // only required on the win
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x51\x53\x8B\xD9\x56\x57\x8D\xB3\x2A\x2A\x2A\x2A\xFF\x15"
				"linux"	 "@_ZN14CBaseAnimating13LockStudioHdrEv"
			}
			"GetModelPtr" // this got inlined on windows, see https://forums.alliedmods.net/showpost.php?p=2231197&postcount=237
			{
				"library"	"server"
				"linux"	 "@_ZN14CBaseAnimating11GetModelPtrEv"
			}
			"GetBoneCache" // "CBaseAnimating::SetupBones" ___RTDynamicCast
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xB8\x10\x18\x00\x00"
				"linux"	 "@_ZN14CBaseAnimating12GetBoneCacheEv"
			}
			"RemoveDeferred" // done
			{
				"library"	"server"
				// "windows"	"\xD9\xEE\x56\x6A\x00\x51\xD9\x1C\x24\x68\x2A\x2A\x2A\x2A\x8B\xF1\xE8\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x6A\x00\x51\x8B\xCE\xF3\x0F\x10\x40\x2A\xF3\x0F\x58\x05\x2A\x2A\x2A\x2A\xF3\x0F\x11\x04\x24\xE8\x2A\x2A\x2A\x2A\x6A\x20\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x0F\xB7\x86\x2A\x2A\x2A\x2A\x8D\x8E\x2A\x2A\x2A\x2A\x83\xC8\x04"
				"linux" "@_ZN11CBaseEntity14RemoveDeferredEv"
			}
			"UTIL_Remove" // "Physics queue not empty, error!\n" // done
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x84\xC0\x75"
				"linux" "@_Z11UTIL_RemoveP18IServerNetworkable"
			}
			"InvalidateBoneCache" // "ValveBiped.Weapon_bone"
			{
				"library"	"server"
				"windows"	"\xFF\xB1\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x59\xC3"
				"linux" "@_ZN14CBaseAnimating19InvalidateBoneCacheEv"
			}
			"SetupVPhysicsHull"   // SetHullSizeNorma -> SetupVPhysicsHull ".AIN File will be updated\"
			{
				"library"	"server"
				"windows"	"\x53\x8B\xD9\x8A\x83\x2A\x2A\x2A\x2A\x3C\x06\x0F\x84\x2A\x2A\x2A\x2A\x84"
				"linux" "@_ZN11CAI_BaseNPC17SetupVPhysicsHullEv"
			}
			"AddGesture"	// "CBaseAnimatingOverlay::AddGesture:  mod"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\x57\x53\x8B\xF9\xE8\x2A\x2A\x2A\x2A\x8B\xCF"
				"linux" "@_ZN21CBaseAnimatingOverlay10AddGestureE8Activityb"
			}
			"AllocateDefaultRelationships"  // find via CCSGameRules::InitDefaultAIRelationships(vfunc)
			{
				"library"	"server"
				"windows"	"\x83\x3D\x2A\x2A\x2A\x2A\x00\x75\x2A\x56\x6A\x0C"
				"linux"	 "@_ZN20CBaseCombatCharacter28AllocateDefaultRelationshipsEv"
			}
			"CAI_HintManager::FindHint" // CAI_Hint *CAI_HintManager::FindHint( CAI_NPC *pNPC, const Vector &position, const CHintCriteria &hintCriteria ) - "Can't find goal entity %s\nCan't execu"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x50\x8B\x55\x10"
				"linux" "@_ZN15CAI_HintManager8FindHintEP11CAI_BaseNPCRK6VectorRK13CHintCriteria"
			}
			"CAI_HintManager::FindHintRandom" // "CAI_Hint" above function
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x14\x56\x57\x8D\x45\xEC\xC7\x45\xEC\x00\x00\x00\x00\x50\xFF\x75\x10"
				"linux" "@_ZN15CAI_HintManager14FindHintRandomEP11CAI_BaseNPCRK6VectorRK13CHintCriteria"
			}
			"PhysicsImpactSound"	// PhysicsImpactSound(CBaseEntity *, IPhysicsObject *, int, int, int, float, float) - find via vtable CBaseEntity_VPhysicsCollision, i used PhysCollisionSound
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xF3\x0F\x10\x05\x2A\x2A\x2A\x2A\x0F\x2F\x45\x1C"
				"linux" "@_Z18PhysicsImpactSoundP11CBaseEntityP14IPhysicsObjectiiiff"
			}
			"CreateRagGib"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x57\x6A\xFF"
				"linux"	 "@_Z12CreateRagGibPKcRK6VectorRK6QAngleS3_fb"
			}
			"CBaseEntity::Use" // find in vtable
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\xD1\x8B\x82\xCC\x00\x00\x00"
				"linux"	 "@_ZN11CBaseEntity3UseEPS_S0_8USE_TYPEf"
			}
			"CBaseEntity::FVisible_Entity"
			{
				"library"	"server"
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\xD8\x00\x00\x00\x56\x57\x8B\xF9\x8D\x4D\xF4"
				"linux"	 "@_ZN11CBaseEntity8FVisibleEPS_iPS0_"
			}
			"AddStepDiscontinuity" // NO "AnimTimeMustBeFirst"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\xF1\x80\xBE\x2A\x2A\x2A\x2A\x2A\x75\x62"
				"linux"	 "@_ZN11CBaseEntity20AddStepDiscontinuityEfRK6VectorRK6QAngle"
			}
			"VerifySequenceIndex"	// NOPE "Bad sequence in GetSequenceActivityName"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x3B\x05"
				"linux"	 "@_Z19VerifySequenceIndexP10CStudioHdr"
			}
			"DispatchEffect" // NO "GlassImpact"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x20\x56\x8D\x4D\xE0\xE8\x2A\x2A\x2A\x2A\x8B\x75\x0C"
				"linux"	 "@_Z14DispatchEffectPKcRK11CEffectData"
			}
			"CineCleanup" // "Script failed for %s\n" "NO retn 4"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x83\xEC\x48\x53"
				"linux"	 "@_ZN11CAI_BaseNPC11CineCleanupEv"
			}
			"CalcAbsolutePosition" // "WARNING: %s(%s) has no eye offset"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x60\x56\x8B\xF1\x8B\x8E"
				"linux"	 "@_ZN11CBaseEntity20CalcAbsolutePositionEv"
			}
			"GetAmmoDef"	// "ammo_50AE_max"
			{
				"library"	"server"
				"windows"	"\x80\x3D\x2A\x2A\x2A\x2A\x2A\x0F\x85\x2A\x2A\x2A\x2A\xD9\x05\x2A\x2A\x2A\x2A\x6A\x0E"
				"linux" "@_Z10GetAmmoDefv"
			}
			"CreateNoSpawn"	// "physics_entity_solver"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x6A\xFF\xFF\x75\x08\xE8\x2A\x2A\x2A\x2A\x8B\xF0\x83\xC4\x08\x85\xF6\x75\x2A\x5E"
				"linux"	 "@_ZN11CBaseEntity13CreateNoSpawnEPKcRK6VectorRK6QAnglePS_"
			}
			"CBaseEntityList::RemoveEntity"  // "CBaseEntityList::AddNonNetworkableEntit" // done
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x8B\x45\x08\x25\xFF\x0F\x00\x00"
				"linux" "@_ZN15CBaseEntityList12RemoveEntityE11CBaseHandle"
			}
			"SetMinMaxSize" // "s: backwards mins/m"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x55\x0C\x33\xC9\x56\x8B\x75\x10\x8B\xC6\x2B\xD6"
				"linux"	 "@_Z12UTIL_SetSizeP11CBaseEntityRK6VectorS3_"
			}
			"VPhysicsInitShadow" // "SetParent on static object, all constra"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\x56\x8B\xF1\x83\x7E\x18\x00"
				"linux"	 "@_ZN11CBaseEntity18VPhysicsInitShadowEbbP7solid_t"
			}
			"VPhysicsInitNormal" // "Overwriting physics object for %s\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x83\x7B\x18\x00"
				"linux"	 "@_ZN11CBaseEntity18VPhysicsInitNormalE11SolidType_tibP7solid_t"
			}
			"UTIL_BloodDrips"   // "ERROR: Undefined ammo type!\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x57\x8B\x7D\x10\x83\xFF\xFF\x0F\x84"
				"linux"	 "@_Z15UTIL_BloodDripsRK6VectorS1_ii"
			}
			"CalculateDefaultPhysicsDamage"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x45\x1C\x53\x56\x85\xC0\x74"
				"linux" "@_Z29CalculateDefaultPhysicsDamageiP21gamevcollisionevent_tfbRi8string_tb"
			}
			"PhysCallbackDamage"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\x8B\x01\x8B\x80\x8C\x00\x00\x00\xFF\xD0\x84\xC0\x75\x2A\x83\x3D\x2A\x2A\x2A\x2A\x00\x0F"
				"linux"	 "@_Z18PhysCallbackDamageP11CBaseEntityRK15CTakeDamageInfo"
			}
			"PhysicsMarkEntitiesAsTouching" // "pushing entity (%s) that has parent (%s" this func -> last call -> jmp
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x0C\x57\x8B\xF9\xB9\x2A\x2A\x2A\x2A\x56\xE8\x2A\x2A\x2A\x2A\xF3\x0F\x10\x46\x2A\x8B\xCF\xF3\x0F\x11\x05\x2A\x2A\x2A\x2A\x8B\x46\x3C\xA3\x2A\x2A\x2A\x2A\x8B\x46\x40\xA3\x2A\x2A\x2A\x2A\x8B\x46\x44\xA3\x2A\x2A\x2A\x2A\x66\x8B\x46\x48\x66\xA3\x2A\x2A\x2A\x2A\x8B\x46\x4C\xA3\x2A\x2A\x2A\x2A\x8B\x46\x50\x8B\x75\x08\x56\xA3\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x57"
				"linux"	 "@_ZN11CBaseEntity29PhysicsMarkEntitiesAsTouchingEPS_R10CGameTrace"
			}
			"CAI_Navigator::UpdateGoalPos" // "Updating goal pos\n" // done
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x80\x78\x18\x00"
				"linux"	 "@_ZN13CAI_Navigator13UpdateGoalPosERK6Vector"
			}
			"CAI_Navigator::SetGoal" // "Failed to pathfind to nav goal:\n" // done
			{
				"library"	"server"
				// TODO: "windows"	"\x55\x8B\xEC\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x80\x78\x18\x00"
				"linux"	 "@_ZN13CAI_Navigator7SetGoalERK12AI_NavGoal_tj"
			}
			"PropBreakableCreateAll" // "Failed to create PropBreakable: would "
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x8B\x48\x30\x89\x8D\x2A\x2A\x2A\x2A\x83"
				"linux"	 "@_Z22PropBreakableCreateAlliP14IPhysicsObjectRK21breakablepropparams_tP11CBaseEntityibb"
			}
			"MarkPartitionHandleDirty" 	// "CTSListBase: Misaligned list\n" above function
			{
				"library"	"server"
				"windows"	"\x8B\x51\x04\x8B\x42\x18\x85\xC0\x74"
				"linux"	 "@_ZN18CCollisionProperty24MarkPartitionHandleDirtyEv"
			}
			"PropBreakablePrecacheAll" // "Trying to precache breakable prop, bu"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x20\x8B\x45\x08\xB9"
				"linux"	 "@_Z24PropBreakablePrecacheAll8string_t"
			}
			"FindEntityInSphere" // done
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x53\x56\x57\x8B\xF9\x8B\x4D\x08"
				"linux"	 "@_ZN17CGlobalEntityList18FindEntityInSphereEP11CBaseEntityRK6VectorfP17IEntityFindFilter" // "@_ZN17CGlobalEntityList18FindEntityInSphereEP11CBaseEntityRK6Vectorf"
			}
			"CreateServerRagdoll" // "CRagdollPropAttached"
			{
				"library"	"server"
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\xB8\x68\x32\x00\x00"
				"linux" "@_Z19CreateServerRagdollP14CBaseAnimatingiRK15CTakeDamageInfoib"
			}
			"Ragdoll_GetRagdoll" // "Solving ragdoll self penetration!"
			{
				"library"	"server"
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\xB8\x68\x32\x00\x00"
				"linux" "@_Z18Ragdoll_GetRagdollP11CBaseEntity"
			}
			"CSoundEnt::InsertSound" // "Could not AllocSound() for InsertSound"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x0F\x2A\x2A\x2A\x2A"
				"linux" "@_ZN9CSoundEnt11InsertSoundEiRK6VectorifP11CBaseEntityiS4_"
			}
			"CAI_TacticalServices::FindLosNode"	// "FindCover() - %s has no nearest node! ("  retn	20h
			{
				"library"	"server"
				"windows"   "\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\x98\x00\x00\x00\x80\x3D\x2A\x2A\x2A\x2A\x00"
				"linux" "@_ZN20CAI_TacticalServices11FindLosNodeERK6VectorS2_fff11FlankType_tS2_f"
			}
			"PrecacheModel"		// "Attempting to precache model, but model"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x2A\x80\x3E\x00"
				"linux" "@_ZN11CBaseEntity13PrecacheModelEPKcb"
			}
			"CAI_TacticalServices::FindCoverNode" // the other "FindCover() - %s has no nearest "
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x80\x00\x00\x00\x80\x3D\x2A\x2A\x2A\x2A\x00"
				"linux" "@_ZN20CAI_TacticalServices13FindCoverNodeERK6VectorS2_S2_ff"
			}
			"MapEntity_ParseEntity"	//	"Can't init %s\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xB8\x0C\x18\x00\x00\xE8"
				"linux" "@_Z21MapEntity_ParseEntityRP11CBaseEntityPKcP16IMapEntityFilter"
			}
			"UTIL_PrecacheOther"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x56\x8B\x75\x08\x8D\x45\xFC"
				"linux" "@_Z18UTIL_PrecacheOtherPKcS0_"
			}
			"UTIL_RemoveImmediate" // NOPE "Couldn't set relationship to unknown en" // done
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x4D"
				"linux" "@_Z20UTIL_RemoveImmediateP11CBaseEntity"
			}
			"AddListenerEntity"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x91\x30\x00\x01\x00\x33\xC0\x56\x57"
				"linux" "@_ZN17CGlobalEntityList17AddListenerEntityEP15IEntityListener"
			}
			"RemoveListenerEntity"   // "navprop" | UNSTABLE SIG // done
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x8D\x45\x08\x81\xC1\x24\x00\x01\x00"
				"linux" "@_ZN17CGlobalEntityList20RemoveListenerEntityEP15IEntityListener"
			}
			"SetEventIndexForSequence" // "Bad sequence in GetSequenceActivityNa" jmp
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x51\x57\x8B\x7D\x08\x85\xFF\x74\x73\x81\x4F"
				"linux" "@_Z24SetEventIndexForSequenceR16mstudioseqdesc_t"
			}
			"VPhysicsInitStatic"	// "trigger_changelevel to map %s has a la"
			{
				"library"	"server"
				"windows"	"\x57\x8B\xF9\x83\x7F\x18\x00\x0F\x84\x2A\x2A\x2A\x2A\xF6\x87\x2A\x2A\x2A\x2A\x2A\x0F\x85"
				"linux" "@_ZN11CBaseEntity18VPhysicsInitStaticEv"
			}
			//"PhysicsDispatchThink"
			//{
			//	"library"	"server"
			//	// TODO: windows
			//	"linux" "@_ZN11CBaseEntity20PhysicsDispatchThinkEMS_FvvE"
			//}
			"PhysicsRunThink"
			{
				"library"	"server"
				// TODO: windows
				"linux" "@_ZN11CBaseEntity15PhysicsRunThinkENS_14thinkmethods_tE"
			}
			"ShouldRemoveThisRagdoll"	// "TICK:%5d:Ragdoll separation count: %d\n" // done ?
			{
				"library"	"server"
				// "windows"	"\x55\x8B\xEC\x83\xEC\x0C\x80\x3D\x2A\x2A\x2A\x2A\x00\x74\x2A\xB0"
				"linux" "@_Z23ShouldRemoveThisRagdollP14CBaseAnimating.part.0"
			}
			"AllocPooledString"	// "%s_weapon"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x45\x0C\x85\xC0\x74\x2A\x80\x38\x00\x74"
				"linux" "@_Z17AllocPooledStringPKc"
			}
			"FindPooledString"	// "!player"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xFF\x75\x0C\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x85"
				"linux" "@_Z16FindPooledStringPKc"
			}
			"GetDataObject"		// "%i : %s (ground %i %s)\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\xD1\xB8\x2A\x2A\x2A\x2A\x8B\x4D\x08\xD3\xE0\x85\x82\x2A\x2A\x2A\x2A\x74\x19\x83\xF9\x1F"
				"linux"	 "@_ZN11CBaseEntity13GetDataObjectEi"
			}
			//"FindEntityGenericNearest"
			//{
			//	"library"	"server"
			//	"windows"	"\x55\x8B\xEC\xFF\x75\x1C\xD9\x45\x10\xFF\x75\x18\xFF\x75\x14"
			//}
			"CheckHasGamePhysicsSimulation"
			{
				"library"	"server"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\x40\x01\x00\x00\xFF\xD0\x84\xC0\x75"
				"linux" "@_ZN11CBaseEntity29CheckHasGamePhysicsSimulationEv"
			}
			"FindInList"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\x57\x8B\x7D\x08\x33\xF6\x8B\x07"
				"linux" "@_Z10FindInListPPKcS0_"
			}
			"Pickup_ForcePlayerToDropThisObject" // "RagdollImpact"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x23\x8B\x8E"
				"linux" "@_Z34Pickup_ForcePlayerToDropThisObjectP11CBaseEntity"
			}
			"UTIL_GetLocalPlayer"
			{
				"library"	"server"
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x8B\x40\x14\x83\xF8\x01\x7E\x2A\x33\xC0"
				"linux" "@_Z19UTIL_GetLocalPlayerv"
			}
			"PrecacheInstancedScene"	// -makereslists, 0FFFFFFFFh
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x83\xEC\x0C\x83\xF9\xFF"
				"linux" "@_Z22PrecacheInstancedScenePKc"
			}
			"ActivityList_NameForIndex"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x33\xC0\x56\x85\xC9\x7E"
				"linux" "@_Z25ActivityList_NameForIndexi"
			}
			"SetActivityForSequence"	// nope "Bad sequence in GetSequenceActivityName" with jmp | LOOKS UNUSED
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x56\xFF\x75\x0C\x8B\x75\x08"
				"linux" "@_Z22SetActivityForSequenceP10CStudioHdri"
			}
			"InvalidatePhysicsRecursive"	// "Bad SetLocalAngles(%f,%f,%f) on %s\n"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\xB8\x00\x10\x00\x00"
				"linux" "@_ZN11CBaseEntity26InvalidatePhysicsRecursiveEi"
			}
			"PhysicsPushEntity"	// "pushing entity (%s) that has parent"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x0C\x56\x8B\xF1\x57\x8B\x8E\x2A\x2A\x2A\x2A\x83\xF9\xFF\x74"
				"linux" "@_ZN11CBaseEntity17PhysicsPushEntityERK6VectorP10CGameTrace"
			}
			"CleanUpMap"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x80\xB9\x5E\x02\x00\x00\x00"
				"linux" "@_ZN12CCSGameRules10CleanUpMapEv"
			}
			"ActivityList_IndexForName"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xFF\x75\x08\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x85\xC0\x78\x11\x8B\x0D"
				"linux" "@_Z25ActivityList_IndexForNamePKc"
			}
			"CUtlSymbol::Initialize"
			{
				"library"	"server"
				"windows"	"\x80\x3D\x2A\x2A\x2A\x2A\x2A\x0F\x85\x2A\x2A\x2A\x2A\x56\x6A\x48\xE8\x2A\x2A\x2A\x2A\x8B\xF0"
				"linux" "@_ZN10CUtlSymbol10InitializeEv"
			}
			"CreateServerRagdollAttached"	// "prop_ragdoll_attached"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xB8\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x56\x57"
				"linux" "@_Z27CreateServerRagdollAttachedP14CBaseAnimatingRK6VectoriiP14IPhysicsObjectS0_iS3_iS3_"
			}
			"CAI_NetworkBuilder::Build" // done ?
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x30\x8B\x45\x08\x53\x8B\xD9\x57\x8B\x48\x04\x8B\x78\x08"
				"linux" "@_ZN18CAI_NetworkBuilder5BuildEP11CAI_Network.cold"
			}
			"CAI_NetworkBuilder::InitNodePosition" // "Bad node type!\n" // done
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x0C\x8B\x46\x3C\x83\xF8\x03\x0F\x84"
				"linux" "@_ZN18CAI_NetworkBuilder16InitNodePositionEP11CAI_NetworkP8CAI_Node"
			}
			"CBaseEntity::PostConstructor"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x56\x8B\xF1\x85\xC0\x74\x12\x50"
				"linux" "@_ZN11CBaseEntity15PostConstructorEPKc"
			}
			// "CAI_Navigator::SetGoal" // "Failed to pathfind to nav goal:"
			// {
			// 	"library"	"server"
			// 	"windows"	"\x55\x8B\xEC\x81\xEC\x2A\x2A\x2A\x2A\x53\x56\x57\x8B\xD9\xE8\x2A\x2A\x2A\x2A\x80\x78\x18\x00"
			// 	"linux" "@_ZN13CAI_Navigator7SetGoalERK12AI_NavGoal_tj"
			// }
			"CBreakableProp::Break"  // "crate"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x81\xEC\x2A\x2A\x2A\x2A\x53\x56\x57\x8B\xF9\x8D\x4D\xFC"
				"linux" "@_ZN14CBreakableProp5BreakEP11CBaseEntityRK15CTakeDamageInfo"
			}
			"CBreakableProp::HandleFirstCollisionInteractions" // "PaintSplatBlue"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x7C\x56\x8B\xF1\x83\xBE\x2A\x2A\x2A\x2A\x2A\x0F\x84\x2A\x2A\x2A\x2A\x68"
				"linux" "@_ZN14CBreakableProp32HandleFirstCollisionInteractionsEiP21gamevcollisionevent_t"
			}
			"CBaseCombatCharacter::Event_Killed" // "item_healthvial"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x20\x53\x56\x8B\xF1\xC6\x45\xFF\x01\x8A\x86\x2A\x2A\x2A\x2A\x8D\x4D\xFF\x57\x8D\xBE"
				"linux" "@_ZN20CBaseCombatCharacter12Event_KilledERK15CTakeDamageInfo"
			}
			"CGameRules::RadiusDamage" // "GameRulesCreation"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\xD9\x45\x10\x6A\x00\xFF\x75\x14\x51\xD9\x1C\x24\xFF\x75\x0C"
				"linux" "@_ZN10CGameRules12RadiusDamageERK15CTakeDamageInfoRK6VectorfiP11CBaseEntity"
			}
			"CBaseEntity::VPhysicsSetObject" // Overwriting physics object for %s\n
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x56\x8B\xF1\x83\xBE\x2A\x2A\x2A\x2A\x2A\x74\x30\x57"
				"linux" "@_ZN11CBaseEntity17VPhysicsSetObjectEP14IPhysicsObject"
			}
			"CBaseEntity::ResetClientsideFrame"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x51\x80\xB9\x2A\x2A\x2A\x2A\x2A\x8A\x81\x2A\x2A\x2A\x2A\x53\x56\x8D\xB1\x2A\x2A\x2A\x2A\x0F\x94\xC3\x8D\x4D\xFF\x88\x5D\xFF\x3A\x01\x74\x30"
				"linux" "@_ZN14CBaseAnimating20ResetClientsideFrameEv"
			}
			"CGib::Spawn_pchar" //unused
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x83\xEC\x08\x56\x57\x6A\x01"
				"linux" "@_ZN4CGib5SpawnEPKc"
			}
			"UTIL_FindClientInPVS_VecVec"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x56\xE8\x2A\x2A\x2A\x2A\x8B\xF0\x85\xF6\x74\x2A\x8B\x0D"
				"linux" "@_Z20UTIL_FindClientInPVSRK6VectorS1_"
			}
			"PhysDisableEntityCollisions_VPhysics"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x53\x8B\x5D\x08\x85\xDB\x74\x56\x57\x8B\x7D\x0C\x85\xFF\x74\x4D\xA1\x2A\x2A\x2A\x2A\x8B\xCF\x56\x8B\x30\x8B\x07\xFF\x50\x44\x50\x8B\x03\x8B\xCB\xFF\x50\x44\x8B\x0D\x2A\x2A\x2A\x2A\x50\xFF\x56\x04"
				"linux" "@_Z27PhysDisableEntityCollisionsP14IPhysicsObjectS0_"
			}
			"PhysEnableEntityCollisions_BaseEnt"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x74\x27\x57\x8B\x7D\x0C\x85\xFF\x74\x1E\x8B\x0D\x2A\x2A\x2A\x2A\x57\x56\x8B\x01\xFF\x50\x08\x8B\xCE\xE8"
				"linux" "@_Z26PhysEnableEntityCollisionsP11CBaseEntityS0_"
			}
			"DetachAttachedRagdollsForEntity"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x83\xEC\x14\x56\x8D\x45\xEC"
				"linux" "@_Z31DetachAttachedRagdollsForEntityP11CBaseEntity"
			}

			// ptrs
			"g_EntityCollisionHash"
			{
				"library"	"server"
				"windows"	"\xFF\x35\x2A\x2A\x2A\x2A\xC7\x05\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x8B\x01"
				"linux"	 "@g_EntityCollisionHash"
			}
			"g_WorldEntity"	// "sv_stepsize"
			{
				"library"	"server"
				"windows"	"\x89\x1D\x2A\x2A\x2A\x2A\xC7\x05\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x8B\x4D\xF4\x6A\x12"
				"linux"	 "@_ZL13g_WorldEntity"
			}
			"g_vecAttackDir"
			{
				"library"	"server"
				"windows"	"\x68\x2A\x2A\x2A\x2A\x83\xEC\x0C\x8B\xCC\x89\x01\x8B\x46\x04\x89\x41\x04"
				"linux"	 "@g_vecAttackDir"
			}
			"m_DefaultRelationship"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x2A\x8B\x45\x08\x56"
				"linux"	 "@_ZN20CBaseCombatCharacter21m_DefaultRelationshipE"
			}
			"m_lastInteraction"
			{
				"library"	"server"
				"windows"	"\xA1\x2A\x2A\x2A\x2A\x40\xA3\x2A\x2A\x2A\x2A\xC3"
				"linux" "@_ZN20CBaseCombatCharacter17m_lastInteractionE"
			}
			"g_SoundController"	// "Invalid starting duration value in enve" the down 2 func , first 8B
			{
				"library"	"server"
				"windows"	"\x76\x1B\xE8\x2A\x2A\x2A\x2A\xFF\x36\x8B\xC8\x8B\x10\xFF\x52\x28"
				"linux"	 "@_ZL12g_Controller"
			}
			"decalsystem"   // "Can't find decal %s"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x83\xEC\x20\x8B\x01\x56\xFF\x75\x0C\xFF\x10\x8B\xF0\x85\xF6\x78\x50\x57\x8D\x4D\xE0"
				"linux" "@decalsystem"
			}
			"m_pActivitySR"   // mov "ACT_INVALID" down func
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x75\x05\x83\xC8\xFF\x5D"
				"linux"	 "@_ZN11CAI_BaseNPC13m_pActivitySRE"
			}
			"m_iNumActivities" // mov "ACT_INVALID" up func
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x0D\x2A\x2A\x2A\x2A\x85\xC9\x74\x17\x8B\x45\x0C\x50"
				"linux"	 "@_ZN11CAI_BaseNPC16m_iNumActivitiesE"
			}
			"m_iNumEvents" // (linux only)
			{
				"library"	"server"
 				"linux"	 "@_ZN11CAI_BaseNPC12m_iNumEventsE"
			}
			"m_pEventSR"
			{
				"library"	"server"
				"windows"	"\x6A\x04\xE8\x2A\x2A\x2A\x2A\x83\xC4\x04\x85\xC0\x74\x0D\x8B\xC8\xE8\x2A\x2A\x2A\x2A\xA3\x2A\x2A\x2A\x2A\xC3"
				"linux" "@_ZN11CAI_BaseNPC10m_pEventSRE"
			}
			"g_pPredictionSystems"
			{
				"library"	"server"
				"windows"	"\x80\x39\x00\x74\x15\xA1\x2A\x2A\x2A\x2A\x85\xC0\x74\x0C\x8B\xFF"
				"linux"	 "@_ZN17IPredictionSystem20g_pPredictionSystemsE"
			}
			"g_AI_SensedObjectsManager"
			{
				"library"	"server"
				"windows"	"\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\xB9\x2A\x2A\x2A\x2A\xE8"
				"linux"	 "@g_AI_SensedObjectsManager"
			}
			"my_g_MultiDamage"	// "AddMultiDamage:  g_MultiDamage.GetDamageForce"
			{
				"library"	"server"
				"windows"	"\x8B\x15\x2A\x2A\x2A\x2A\x83\xFA\xFF\x74\x7C\xA1\x2A\x2A\x2A\x2A\x8B\xCA\x81\xE1"
				"linux"	 "@g_MultiDamage"
			}
			"g_Templates"	// "RegisterTemplateEntity: template entity"
			{
				"library"	"server"
				"windows"	"\xB9\x2A\x2A\x2A\x2A\xC6\x04\x06\x00\x8D\x45\x08\xC7\x47\x2A\x2A\x2A\x2A\x2A\xC6\x47\x10\x00"
				"linux"	 "@_ZL11g_Templates"
			}
			"g_EntityListPool"	//	"Value"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x8B\x45\x08\x56\x8B\x30\x8B\x40\x08\x89\x75\x08\x0F\xB7\x40\x10\x89\x45\xF8"
				"linux"	 "@g_EntityListPool"
			}
			"g_CEventQueue"		// "CompareValues"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x57\x8B\xF9\x6A\x05\x8D\x4B\x08\xE8"
				"linux"	 "@g_EventQueue"
			}
			"g_PostSimulationQueue"		// "Physics queue not empty, error!\n"
			{
				"library"	"server"
				"windows"	"\xB9\x2A\x2A\x2A\x2A\xE8\x2A\x2A\x2A\x2A\x33\xF6\x39\xB7\x2A\x2A\x2A\x2A\x7E\x21"
				"linux"	 "@g_PostSimulationQueue"
			}
			"EventQueuePrioritizedEvent_t_s_Allocator"	// "EventQueuePrioritizedEvent_t pool"
			{
				"library"	"server"
				"windows"	"\x6A\x00\x68\x2A\x2A\x2A\x2A\x6A\x02\x68\x2A\x00\x00\x00\x6A"
				"linux" "@_ZN28EventQueuePrioritizedEvent_t11s_AllocatorE"
			}
			"g_TouchTrace"		// PhysicsMarkEntitiesAsTouching
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x0C\x57\x8B\xF9\xB9\x2A\x2A\x2A\x2A\x56\xE8\x2A\x2A\x2A\x2A\xF3\x0F\x10\x46\x2A\x8B\xCF"
				"linux"	 "@_ZL12g_TouchTrace"
			}
			"gm_AllHints"
			{
				"library"	"server"
				"windows"	"\xC7\x45\x2A\x2A\x2A\x2A\x2A\x50\x8D\x4D\xC8\xE8\x2A\x2A\x2A\x2A\x88\x5D\xF0"
				"linux"	 "@_ZN15CAI_HintManager11gm_AllHintsE"
			}
			"s_GameSystems"   //  "AutoGameSystem already added to game sy"
			{
				"library"	"server"
				"windows"	"\x56\x8B\x35\x2A\x2A\x2A\x2A\x57\x8B\x3D\x2A\x2A\x2A\x2A\x85\xF6\x74\x30\x8B\x0D\x2A\x2A\x2A\x2A\x33\xC0\x85\xC9\x7E\x14\x8B\x15"
				"linux" "@_ZL13s_GameSystems"
			}
			"AI_Waypoint_t_s_Allocator"	// "Adding triangulation\n"
			{
				"library"	"server"
				"windows"	"\xB9\x2A\x2A\x2A\x2A\x6A\x30\xE8\x2A\x2A\x2A\x2A\x8B\xC8\x85\xC9\x74\x1D"
				"linux"	 "@_ZN13AI_Waypoint_t11s_AllocatorE"
			}
			"g_AIFriendliesTalkSemaphore" // "[NPCState::%s]"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x2A\x2A\x8B\x2A\x8B\x2A\x2A\xFF\x2A\x84\xC0\x75\x06"
				"linux" "@g_AIFriendliesTalkSemaphore"
			}
			"g_AIFoesTalkSemaphore"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x8B\x2A\x2A\x8B\x2A\x8B\x2A\x2A\xFF\x2A\x84\xC0\x75\x06"
				"linux" "@g_AIFoesTalkSemaphore"
			}
			"g_Collisions"
			{
				"library"	"server"
				// TODO: windows
				"linux" "@g_Collisions"
			}
			"g_pNotify" // "PlayerEnteredVehicle"
			{
				"library"	"server"
				"windows"	"\x8B\x0D\x2A\x2A\x2A\x2A\x68\x2A\x2A\x2A\x2A\x56\x8B\x01\xFF\x50\x08"
				"linux"	 "@g_pNotify"
			}
			"gm_TypedHints" // same as CAI_HintManager_FindHint
			{
				"library"	"server"
				"windows"	"\x57\x50\x0F\xBF\xBB\x2A\x2A\x2A\x2A\xB9"
				"linux" "@_ZN15CAI_HintManager13gm_TypedHintsE"
			}
			"s_pSymbolTable"
			{
				"library"	"server"
				"windows"	"\x8B\x35\x2A\x2A\x2A\x2A\x8D\x4E\x38"
				"linux" "@_ZN10CUtlSymbol14s_pSymbolTableE"
			}
			"g_interactionHitByPlayerThrownPhysObj" // "PROP_CLEARFLAGS"
			{
				"library"	"server"
				"windows"	"\x8B\x1D\x2A\x2A\x2A\x2A\x8B\xCF\xE8\x2A\x2A\x2A\x2A\x85\xDB\x7E\x0E"
				"linux" "@g_interactionHitByPlayerThrownPhysObj"
			}
			"g_AI_SquadManager"	// "Found %s that isn't in a squad\n"
			{
				"library"	"server"
				"windows"	"\xFF\x50\x2C\x8B\x1D\x2A\x2A\x2A\x2A\x8B\xF3\x85\xF6"
				"linux"	 "@g_AI_SquadManager"
			}
			"g_pNotify"
			{
				"library"	"server"
				// TODO: windows
				"linux"	 "@g_pNotify"
			}
			"g_PhysWorldObject" // "phys_motor %s does not have a valid axi"
			{
				"library"	"server"
				"windows"	"\x8B\xB3\x2A\x2A\x2A\x2A\x85\xF6\x75\x0B\x8B\x3D\x2A\x2A\x2A\x2A\x89\x7D\xFC"
				"linux"	 "@g_PhysWorldObject"
			}
			"g_Collisions" // "Putting entity to sleep: %s\"
			{
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x56\x57\x8B\x7D\x08\x33\xF6\x33\xC9\xB8"
				"linux" "@g_Collisions"
			}
			"sm_pSingleton"
			{
				"library"	"server"
				"windows"	"\x8B\x15\x2A\x2A\x2A\x2A\x8B\x41\x08\x8B\xCA\x56"
				"linux" "@_ZN11IMoveHelper13sm_pSingletonE"
			}
			"g_interactionScriptedTarget"
			{
				"library"	"server"
				"windows"	"\x83\x3D\x2A\x2A\x2A\x2A\x00\x56\x8B\xF1\x75\x0A"
				"linux" "@g_interactionScriptedTarget"
			}
			"s_nCurrIterVal"
			{
				"library"	"server"
				// TODO: "windows"	""
				"linux" "@_ZN10CPathTrack14s_nCurrIterValE"
			}
			"s_bIsIterating"
			{
				"library"	"server"
				// TODO: "windows"	""
				"linux" "@_ZN10CPathTrack14s_bIsIteratingE"
			}
			"CBasePlayer::RumbleEffect" // "Rumble"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x83\xEC\x20\x56\x8B\xF1\x8B\x06\x8B\x80\x04\x01\x00\x00\xFF\xD0\x84\xC0\x74"
				"linux" "@_ZN11CBasePlayer12RumbleEffectEhhh"
			}
			"CBasePlayer::SnapEyeAngles" // referenced in CBaseEntity::Teleport
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x8B\x45\x08\xD9\x00\xD9\x99\x18\x0A\x00\x00"
				"linux" "@_ZN11CBasePlayer13SnapEyeAnglesERK6QAngle"
			}
			"CBasePlayer::GetViewModel"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x8B\x45\x08\x8B\x94\x81\x2A\x2A\x2A\x2A\x83\xFA\xFF\x74\x20\xA1\x2A\x2A\x2A\x2A\x8B\xCA\x81\xE1\x2A\x2A\x2A\x2A\xC1\xEA\x0C\x03\xC9\x39\x54\xC8\x08\x75\x08\x8B\x44\xC8\x04\x5D\xC2\x08\x00"
				"linux" "@_ZN11CBasePlayer12GetViewModelEib"
			}
			"InputCommand"
			{
				"library"   "server"
				"windows"   "\x55\x8B\xEC\x56\x8B\x75\x08\x83\x7E\x18\x02\x75"
				"linux"	 "@_ZN19CPointServerCommand12InputCommandER11inputdata_t"
			}
			"FindEntityGeneric"
			{
				"library"   "server"
				"windows"	"\x55\x8B\xEC\x6A\x00\xFF\x75\x18\xB9\x2A\x2A\x2A\x2A\xFF\x75\x14"
				"linux"	"@_ZN17CGlobalEntityList17FindEntityGenericEP11CBaseEntityPKcS1_S1_S1_"
			}
			//"EquipPlayer" // UNUSED, delete me
			//{
			//	"library"   "server"
			//	"windows" "\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x8B\xF1\x85\xDB\x74\x2A\x8B\x03"
			//	"linux" "@_ZN16CGamePlayerEquip11EquipPlayerEP11CBaseEntity"
			//}
			"BounceTouch" //CBaseGrenade
			{
				"library"   "server"
				"windows" "\x55\x8B\xEC\x81\xEC\xC4\x00\x00\x00\x56\x57\x8B\x7D\x08\x8B\xF1\xF6\x87\x88\x01\x00\x00\x28"
				"linux" "@_ZN12CBaseGrenade11BounceTouchEP11CBaseEntity"
			}
			"ThumbleThink" //CBaseGrenade
			{
				"library"   "server"
				"windows" "\x55\x8B\xEC\x83\xEC\x18\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x8B\xCE"
				"linux" "@_ZN12CBaseGrenade11TumbleThinkEv"
			}
			"DangerSoundThink" //CBaseGrenade
			{
				"library"   "server"
				"windows" "\x55\x8B\xEC\x83\xEC\x1C\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A\x84\xC0\x75\x2A\x8B\xCE\xE8\x2A\x2A\x2A\x2A\x5E\x8B\xE5\x5D\xC3\x8B\x86\x04\x01\x00\x00"
				"linux" "@_ZN12CBaseGrenade16DangerSoundThinkEv"
			}
			"ExplodeTouch" //CBaseGrenade
			{
				"library"   "server"
				"windows" "\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x8B\x43\x08\x81\xEC\xFC\x00\x00\x00"
				"linux" "@_ZN12CBaseGrenade12ExplodeTouchEP11CBaseEntity"
			}
			//"CBaseEntity::SUB_StartFadeOut_fb"
			//{
			//	"library"   "server"
			//	"linux" "@_ZN11CBaseEntity16SUB_StartFadeOutEfb"
			//}
			//"CTraceFilterNoNPCsOrPlayer::ShouldHitEntity"
			//{
			//	"library"   "server"
			//	// TODO: windows
			//	"linux" "@_ZN26CTraceFilterNoNPCsOrPlayer15ShouldHitEntityEP13IHandleEntityi"
			//}

			"CTriggerHurt_HurtAllTouchers"
			{
				"library"	"server"
				//TODO: "windows"	""
				"linux" "@_ZN12CTriggerHurt15HurtAllTouchersEf"
			}

			"CUtlMemoryPool::Alloc_uint" // TODO: windows
			{
				"linux" "@_ZN14CUtlMemoryPool5AllocEj"
			}
			"CUtlMemoryPool::Free" // TODO: windows
			{
				"linux" "@_ZN14CUtlMemoryPool4FreeEPv"
			}
		}
	}
}